<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[MySQL重置和权限设置]]></title>
      <url>/Blog/2018/05/30/mysql/</url>
      <content type="html"><![CDATA[<p>##重置密码</p>
<ol>
<li><p>关闭MySQL服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/mysql/support-files/mysql.server</div></pre></td></tr></table></figure>
</li>
<li><p>获取权限  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/mysql/bin 进入目录</div></pre></td></tr></table></figure>
</li>
<li><p>获取权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo su</div><div class="line">```  </div><div class="line"> </div><div class="line">4. 重启服务器</div></pre></td></tr></table></figure>
</li>
</ol>
<p>./mysqld_safe –skip-grant-tables<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">5. 重开一个终端</div></pre></td></tr></table></figure></p>
<p>alias mysql=/usr/local/mysql/bin/mysql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">6. 输入mysql 进入MySQL命令模式</div><div class="line">7. use MySQL进入数据库</div><div class="line">8. flush privileges</div><div class="line">9. set password for &apos;root&apos;@&apos;localhost&apos;=password(&apos;新密码&apos;)</div><div class="line"></div><div class="line"></div><div class="line">##MySQL常操作</div><div class="line">1. 登录</div><div class="line">``` </div><div class="line">mysql -u root -p XXX</div></pre></td></tr></table></figure></p>
<ol>
<li><p>创建用户</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create user &apos;test&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</div></pre></td></tr></table></figure>
</li>
<li><p>允许外网访问</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create user &apos;test&apos;@&apos;%&apos; identified by &apos;123456&apos;;</div></pre></td></tr></table></figure>
</li>
<li><p>刷新授权<br><code>\flush privileges</code></p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 反编译 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title></title>
      <url>/Blog/2018/02/05/%E8%85%BE%E8%AE%AF%E7%9B%B4%E6%92%AD/</url>
      <content type="html"><![CDATA[<p>最近公司弄了一个在线娃娃机项目，用到了腾讯直播，期间遇到了许多问题，再次记录一下。<br>腾讯云的直播产品非常多，文档也比较全，但是最大的问题是相互依赖，你可能要解决一个问题，要从直播找起，然后点播，然后互动直播，有点乱，再次整理一下。</p>
<p>##名词解释：</p>
<p>###直播码：</p>
<blockquote>
<p>md5(房间号_用户名_main)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">BIZID=8888,用户名=14y2l2c，房间号=293710</div><div class="line">直播码 = md5(293710_14y2l2c_main)=81265058829fd2e50c8ec2ac78d55127</div><div class="line">播放地址=传输协议://BIZID.liveplay.myqcloud.com/live/直播码[.格式</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">生成后的旁路直播地址</div><div class="line">rtmp:rtmp://8888.liveplay.myqcloud.com/live/8888_81265058829fd2e50c8ec2ac78d55127</div><div class="line">flv: http://8888.liveplay.myqcloud.com/live/8888_81265058829fd2e50c8ec2ac78d55127.flv</div><div class="line">hls:http://8888.liveplay.myqcloud.com/live/8888_81265058829fd2e50c8ec2ac78d55127.m3u8</div></pre></td></tr></table></figure>
<p>###BIZID</p>
<blockquote>
<p>在直播——&gt;接入管理——&gt;直播码接入可以找到</p>
</blockquote>
<p><img src="http://ww1.sinaimg.cn/large/d948997dgy1fo5faoupnyj21vy0bc0x1.jpg" alt="BIZID地址"></p>
<p>##产品名：</p>
<p>###点播</p>
<p>####主要功能</p>
<ol>
<li>音视频的存储管理，不管是点播还是互动直播的录制的视频，都把存在点播下面</li>
<li>音视频的转码</li>
<li>音视频的播放</li>
</ol>
<p>###直播</p>
<p>####主要功能</p>
<ol>
<li>推流</li>
<li>播放<br><strong>与点播相比，主要可以区别在于可以推流</strong></li>
</ol>
<p>###互动直播</p>
<p>####主要功能</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title></title>
      <url>/Blog/2017/10/12/android%20api/</url>
      <content type="html"><![CDATA[<h2 id="Android-简介"><a href="#Android-简介" class="headerlink" title="Android 简介"></a>Android 简介</h2><p><a href="https://developer.android.google.cn/guide/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/index.html</a></p>
<h2 id="应用基础知识"><a href="#应用基础知识" class="headerlink" title="应用基础知识"></a>应用基础知识</h2><p><a href="https://developer.android.google.cn/guide/components/fundamentals.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/fundamentals.html</a></p>
<h2 id="设备兼容性-Device-Compatibility"><a href="#设备兼容性-Device-Compatibility" class="headerlink" title="设备兼容性 Device Compatibility"></a>设备兼容性 Device Compatibility</h2><p><a href="https://developer.android.google.cn/guide/practices/compatibility.html" target="_blank" rel="external">https://developer.android.google.cn/guide/practices/compatibility.html</a></p>
<h2 id="系统权限"><a href="#系统权限" class="headerlink" title="系统权限"></a>系统权限</h2><p><a href="https://developer.android.google.cn/guide/topics/security/permissions.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/security/permissions.html</a></p>
<h2 id="平台架构"><a href="#平台架构" class="headerlink" title="平台架构"></a>平台架构</h2><p><a href="https://developer.android.google.cn/guide/platform/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/platform/index.html</a></p>
<h2 id="使用-Java-8-语言功能"><a href="#使用-Java-8-语言功能" class="headerlink" title="使用 Java 8 语言功能"></a>使用 Java 8 语言功能</h2><p><a href="https://developer.android.google.cn/guide/platform/j8-jack.html" target="_blank" rel="external">https://developer.android.google.cn/guide/platform/j8-jack.html</a></p>
<h2 id="在-Android-Runtime-ART-上验证应用行为"><a href="#在-Android-Runtime-ART-上验证应用行为" class="headerlink" title="在 Android Runtime (ART) 上验证应用行为"></a>在 Android Runtime (ART) 上验证应用行为</h2><p><a href="https://developer.android.google.cn/guide/practices/verifying-apps-art.html" target="_blank" rel="external">https://developer.android.google.cn/guide/practices/verifying-apps-art.html</a></p>
<h2 id="应用组件"><a href="#应用组件" class="headerlink" title="应用组件"></a>应用组件</h2><p><a href="https://developer.android.google.cn/guide/components/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/index.html</a></p>
<h2 id="Intent-和-Intent-过滤器"><a href="#Intent-和-Intent-过滤器" class="headerlink" title="Intent 和 Intent 过滤器"></a>Intent 和 Intent 过滤器</h2><p><a href="https://developer.android.google.cn/guide/components/intents-filters.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/intents-filters.html</a></p>
<h2 id="通用-Intent"><a href="#通用-Intent" class="headerlink" title="通用 Intent"></a>通用 Intent</h2><p><a href="https://developer.android.google.cn/guide/components/intents-common.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/intents-common.html</a></p>
<h2 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h2><p><a href="https://developer.android.google.cn/guide/components/activities.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/activities.html</a></p>
<h2 id="片段-fragment"><a href="#片段-fragment" class="headerlink" title="片段 fragment"></a>片段 fragment</h2><p><a href="https://developer.android.google.cn/guide/components/fragments.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/fragments.html</a></p>
<h2 id="加载器"><a href="#加载器" class="headerlink" title="加载器"></a>加载器</h2><p><a href="https://developer.android.google.cn/guide/components/loaders.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/loaders.html</a></p>
<h2 id="任务和返回栈"><a href="#任务和返回栈" class="headerlink" title="任务和返回栈"></a>任务和返回栈</h2><p><a href="https://developer.android.google.cn/guide/components/tasks-and-back-stack.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/tasks-and-back-stack.html</a></p>
<h2 id="概览屏幕"><a href="#概览屏幕" class="headerlink" title="概览屏幕"></a>概览屏幕</h2><p><a href="https://developer.android.google.cn/guide/components/recents.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/recents.html</a></p>
<h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><p><a href="https://developer.android.google.cn/guide/components/services.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/services.html</a></p>
<h2 id="绑定服务"><a href="#绑定服务" class="headerlink" title="绑定服务"></a>绑定服务</h2><p><a href="https://developer.android.google.cn/guide/components/bound-services.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/bound-services.html</a></p>
<h2 id="Android-接口定义语言-AIDL"><a href="#Android-接口定义语言-AIDL" class="headerlink" title="Android 接口定义语言 (AIDL)"></a>Android 接口定义语言 (AIDL)</h2><p><a href="https://developer.android.google.cn/guide/components/aidl.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/aidl.html</a></p>
<h2 id="内容提供程序"><a href="#内容提供程序" class="headerlink" title="内容提供程序"></a>内容提供程序</h2><p><a href="https://developer.android.google.cn/guide/topics/providers/content-providers.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/providers/content-providers.html</a></p>
<h2 id="内容提供程序基础知识"><a href="#内容提供程序基础知识" class="headerlink" title="内容提供程序基础知识"></a>内容提供程序基础知识</h2><p><a href="https://developer.android.google.cn/guide/topics/providers/content-provider-basics.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/providers/content-provider-basics.html</a></p>
<h2 id="创建内容提供程序"><a href="#创建内容提供程序" class="headerlink" title="创建内容提供程序"></a>创建内容提供程序</h2><p><a href="https://developer.android.google.cn/guide/topics/providers/content-provider-creating.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/providers/content-provider-creating.html</a></p>
<h2 id="日历提供程序"><a href="#日历提供程序" class="headerlink" title="日历提供程序"></a>日历提供程序</h2><p><a href="https://developer.android.google.cn/guide/topics/providers/calendar-provider.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/providers/calendar-provider.html</a></p>
<h2 id="联系人提供程序"><a href="#联系人提供程序" class="headerlink" title="联系人提供程序"></a>联系人提供程序</h2><p><a href="https://developer.android.google.cn/guide/topics/providers/contacts-provider.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/providers/contacts-provider.html</a></p>
<h2 id="存储访问框架"><a href="#存储访问框架" class="headerlink" title="存储访问框架"></a>存储访问框架</h2><p><a href="https://developer.android.google.cn/guide/topics/providers/document-provider.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/providers/document-provider.html</a></p>
<h2 id="应用小部件-App-Widgets"><a href="#应用小部件-App-Widgets" class="headerlink" title="应用小部件 App Widgets"></a>应用小部件 App Widgets</h2><p><a href="https://developer.android.google.cn/guide/topics/appwidgets/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/appwidgets/index.html</a></p>
<h2 id="应用小部件主机-App-Widget-Host"><a href="#应用小部件主机-App-Widget-Host" class="headerlink" title="应用小部件主机 App Widget Host"></a>应用小部件主机 App Widget Host</h2><p><a href="https://developer.android.google.cn/guide/topics/appwidgets/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/appwidgets/index.html</a></p>
<h2 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h2><p><a href="https://developer.android.google.cn/guide/components/processes-and-threads.html" target="_blank" rel="external">https://developer.android.google.cn/guide/components/processes-and-threads.html</a></p>
<h2 id="应用资源-App-Resources"><a href="#应用资源-App-Resources" class="headerlink" title="应用资源 App Resources"></a>应用资源 App Resources</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/index.html</a></p>
<h2 id="资源概览"><a href="#资源概览" class="headerlink" title="资源概览"></a>资源概览</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/overview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/overview.html</a></p>
<h2 id="提供资源"><a href="#提供资源" class="headerlink" title="提供资源"></a>提供资源</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/providing-resources.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/providing-resources.html</a></p>
<h2 id="访问资源"><a href="#访问资源" class="headerlink" title="访问资源"></a>访问资源</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/accessing-resources.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/accessing-resources.html</a></p>
<h2 id="处理运行时变更"><a href="#处理运行时变更" class="headerlink" title="处理运行时变更"></a>处理运行时变更</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/runtime-changes.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/runtime-changes.html</a></p>
<h2 id="本地化-Localizing-with-Resources"><a href="#本地化-Localizing-with-Resources" class="headerlink" title="本地化 Localizing with Resources"></a>本地化 Localizing with Resources</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/localization.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/localization.html</a></p>
<h2 id="ICU4J-Android-框架-API"><a href="#ICU4J-Android-框架-API" class="headerlink" title="ICU4J Android 框架 API"></a>ICU4J Android 框架 API</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/icu4j-framework.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/icu4j-framework.html</a></p>
<h2 id="语言和语言区域"><a href="#语言和语言区域" class="headerlink" title="语言和语言区域"></a>语言和语言区域</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/multilingual-support.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/multilingual-support.html</a></p>
<h2 id="资源类型-Resource-Types"><a href="#资源类型-Resource-Types" class="headerlink" title="资源类型 Resource Types"></a>资源类型 Resource Types</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/available-resources.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/available-resources.html</a></p>
<h2 id="动画-Animation-Resources"><a href="#动画-Animation-Resources" class="headerlink" title="动画 Animation Resources"></a>动画 Animation Resources</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/animation-resource.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/animation-resource.html</a></p>
<h2 id="颜色状态列表-Color-State-List-Resource"><a href="#颜色状态列表-Color-State-List-Resource" class="headerlink" title="颜色状态列表 Color State List Resource"></a>颜色状态列表 Color State List Resource</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/color-list-resource.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/color-list-resource.html</a></p>
<h2 id="可绘制对象"><a href="#可绘制对象" class="headerlink" title="可绘制对象"></a>可绘制对象</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/drawable-resource.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/drawable-resource.html</a></p>
<h2 id="布局-Layout-Resource"><a href="#布局-Layout-Resource" class="headerlink" title="布局 Layout Resource"></a>布局 Layout Resource</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/layout-resource.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/layout-resource.html</a></p>
<h2 id="菜单-Menu-Resource"><a href="#菜单-Menu-Resource" class="headerlink" title="菜单 Menu Resource"></a>菜单 Menu Resource</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/menu-resource.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/menu-resource.html</a></p>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/string-resource.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/string-resource.html</a></p>
<h2 id="样式-Style-Resource"><a href="#样式-Style-Resource" class="headerlink" title="样式 Style Resource"></a>样式 Style Resource</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/style-resource.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/style-resource.html</a></p>
<h2 id="其他类型-More-Resource-Types"><a href="#其他类型-More-Resource-Types" class="headerlink" title="其他类型 More Resource Types"></a>其他类型 More Resource Types</h2><p><a href="https://developer.android.google.cn/guide/topics/resources/more-resources.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/resources/more-resources.html</a></p>
<h2 id="应用清单"><a href="#应用清单" class="headerlink" title="应用清单"></a>应用清单</h2><p><a href="https://developer.android.google.cn/guide/topics/manifest/manifest-intro.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/manifest/manifest-intro.html</a></p>
<h2 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/index.html</a></p>
<h2 id="UI-概览"><a href="#UI-概览" class="headerlink" title="UI 概览"></a>UI 概览</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/overview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/overview.html</a></p>
<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/declaring-layout.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/declaring-layout.html</a></p>
<h2 id="线性布局"><a href="#线性布局" class="headerlink" title="线性布局"></a>线性布局</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/layout/linear.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/layout/linear.html</a></p>
<h2 id="相对布局-Relative-Layout"><a href="#相对布局-Relative-Layout" class="headerlink" title="相对布局 Relative Layout"></a>相对布局 Relative Layout</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/layout/relative.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/layout/relative.html</a></p>
<h2 id="列表视图"><a href="#列表视图" class="headerlink" title="列表视图"></a>列表视图</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/layout/listview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/layout/listview.html</a></p>
<h2 id="网格视图-Grid-View"><a href="#网格视图-Grid-View" class="headerlink" title="网格视图 Grid View"></a>网格视图 Grid View</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/layout/gridview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/layout/gridview.html</a></p>
<h2 id="输入控件"><a href="#输入控件" class="headerlink" title="输入控件"></a>输入控件</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/controls.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/controls.html</a></p>
<h2 id="按钮-Buttons"><a href="#按钮-Buttons" class="headerlink" title="按钮 Buttons"></a>按钮 Buttons</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/controls/button.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/controls/button.html</a></p>
<h2 id="文本字段-Specifying-the-Input-Method-Type"><a href="#文本字段-Specifying-the-Input-Method-Type" class="headerlink" title="文本字段 Specifying the Input Method Type"></a>文本字段 Specifying the Input Method Type</h2><p><a href="https://developer.android.google.cn/training/keyboard-input/style.html" target="_blank" rel="external">https://developer.android.google.cn/training/keyboard-input/style.html</a></p>
<h2 id="复选框-Checkboxes"><a href="#复选框-Checkboxes" class="headerlink" title="复选框 Checkboxes"></a>复选框 Checkboxes</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/controls/checkbox.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/controls/checkbox.html</a></p>
<h2 id="单选按钮-Radio-Buttons"><a href="#单选按钮-Radio-Buttons" class="headerlink" title="单选按钮 Radio Buttons"></a>单选按钮 Radio Buttons</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/controls/radiobutton.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/controls/radiobutton.html</a></p>
<h2 id="切换按钮-Toggle-Buttons"><a href="#切换按钮-Toggle-Buttons" class="headerlink" title="切换按钮 Toggle Buttons"></a>切换按钮 Toggle Buttons</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/controls/togglebutton.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/controls/togglebutton.html</a></p>
<h2 id="微调框"><a href="#微调框" class="headerlink" title="微调框"></a>微调框</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/controls/spinner.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/controls/spinner.html</a></p>
<h2 id="选取器"><a href="#选取器" class="headerlink" title="选取器"></a>选取器</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/controls/pickers.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/controls/pickers.html</a></p>
<h2 id="输入事件"><a href="#输入事件" class="headerlink" title="输入事件"></a>输入事件</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/ui-events.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/ui-events.html</a></p>
<h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/menus.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/menus.html</a></p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/settings.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/settings.html</a></p>
<h2 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/dialogs.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/dialogs.html</a></p>
<h2 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/notifiers/notifications.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/notifiers/notifications.html</a></p>
<h2 id="Toasts"><a href="#Toasts" class="headerlink" title="Toasts"></a>Toasts</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/notifiers/toasts.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/notifiers/toasts.html</a></p>
<h2 id="搜索-Search-Overview"><a href="#搜索-Search-Overview" class="headerlink" title="搜索 Search Overview"></a>搜索 Search Overview</h2><p><a href="https://developer.android.google.cn/guide/topics/search/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/search/index.html</a></p>
<h2 id="创建搜索界面-Creating-a-Search-Interface"><a href="#创建搜索界面-Creating-a-Search-Interface" class="headerlink" title="创建搜索界面 Creating a Search Interface"></a>创建搜索界面 Creating a Search Interface</h2><p><a href="https://developer.android.google.cn/guide/topics/search/search-dialog.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/search/search-dialog.html</a></p>
<h2 id="添加近期查询建议-Adding-Recent-Query-Suggestions"><a href="#添加近期查询建议-Adding-Recent-Query-Suggestions" class="headerlink" title="添加近期查询建议 Adding Recent Query Suggestions"></a>添加近期查询建议 Adding Recent Query Suggestions</h2><p><a href="https://developer.android.google.cn/guide/topics/search/adding-recent-query-suggestions.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/search/adding-recent-query-suggestions.html</a></p>
<h2 id="添加自定义建议-Adding-Custom-Suggestions"><a href="#添加自定义建议-Adding-Custom-Suggestions" class="headerlink" title="添加自定义建议 Adding Custom Suggestions"></a>添加自定义建议 Adding Custom Suggestions</h2><p><a href="https://developer.android.google.cn/guide/topics/search/adding-custom-suggestions.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/search/adding-custom-suggestions.html</a></p>
<h2 id="可搜索配置-Searchable-Configuration"><a href="#可搜索配置-Searchable-Configuration" class="headerlink" title="可搜索配置 Searchable Configuration"></a>可搜索配置 Searchable Configuration</h2><p><a href="https://developer.android.google.cn/guide/topics/search/searchable-config.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/search/searchable-config.html</a></p>
<h2 id="多窗口支持"><a href="#多窗口支持" class="headerlink" title="多窗口支持"></a>多窗口支持</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/multi-window.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/multi-window.html</a></p>
<h2 id="拖放"><a href="#拖放" class="headerlink" title="拖放"></a>拖放</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/drag-drop.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/drag-drop.html</a></p>
<h2 id="无障碍功能-Accessibility"><a href="#无障碍功能-Accessibility" class="headerlink" title="无障碍功能 Accessibility"></a>无障碍功能 Accessibility</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/accessibility/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/accessibility/index.html</a></p>
<h2 id="为应用设置无障碍功能-Making-Apps-More-Accessible"><a href="#为应用设置无障碍功能-Making-Apps-More-Accessible" class="headerlink" title="为应用设置无障碍功能 Making Apps More Accessible"></a>为应用设置无障碍功能 Making Apps More Accessible</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/accessibility/apps.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/accessibility/apps.html</a></p>
<h2 id="无障碍功能开发者检查单-Accessibility-Developer-Checklist"><a href="#无障碍功能开发者检查单-Accessibility-Developer-Checklist" class="headerlink" title="无障碍功能开发者检查单 Accessibility Developer Checklist"></a>无障碍功能开发者检查单 Accessibility Developer Checklist</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/accessibility/checklist.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/accessibility/checklist.html</a></p>
<h2 id="构建无障碍服务-Building-Accessibility-Services"><a href="#构建无障碍服务-Building-Accessibility-Services" class="headerlink" title="构建无障碍服务 Building Accessibility Services"></a>构建无障碍服务 Building Accessibility Services</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/accessibility/services.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/accessibility/services.html</a></p>
<h2 id="样式和主题"><a href="#样式和主题" class="headerlink" title="样式和主题"></a>样式和主题</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/themes.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/themes.html</a></p>
<h2 id="自定义组件-Custom-Components"><a href="#自定义组件-Custom-Components" class="headerlink" title="自定义组件 Custom Components"></a>自定义组件 Custom Components</h2><p><a href="https://developer.android.google.cn/guide/topics/ui/custom-components.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/ui/custom-components.html</a></p>
<h2 id="动画和图形-Animation-and-Graphics"><a href="#动画和图形-Animation-and-Graphics" class="headerlink" title="动画和图形 Animation and Graphics"></a>动画和图形 Animation and Graphics</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/index.html</a></p>
<h2 id="概览-Overview"><a href="#概览-Overview" class="headerlink" title="概览 Overview"></a>概览 Overview</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/overview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/overview.html</a></p>
<h2 id="属性动画-Property-Animation"><a href="#属性动画-Property-Animation" class="headerlink" title="属性动画 Property Animation"></a>属性动画 Property Animation</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/prop-animation.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/prop-animation.html</a></p>
<h2 id="视图动画-View-Animation"><a href="#视图动画-View-Animation" class="headerlink" title="视图动画 View Animation"></a>视图动画 View Animation</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/view-animation.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/view-animation.html</a></p>
<h2 id="可绘制动画-Drawable-Animation"><a href="#可绘制动画-Drawable-Animation" class="headerlink" title="可绘制动画 Drawable Animation"></a>可绘制动画 Drawable Animation</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/drawable-animation.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/drawable-animation.html</a></p>
<h2 id="画布和可绘制对象-Canvas-and-Drawables"><a href="#画布和可绘制对象-Canvas-and-Drawables" class="headerlink" title="画布和可绘制对象 Canvas and Drawables"></a>画布和可绘制对象 Canvas and Drawables</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/2d-graphics.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/2d-graphics.html</a></p>
<h2 id="OpenGL-ES"><a href="#OpenGL-ES" class="headerlink" title="OpenGL ES"></a>OpenGL ES</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/opengl.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/opengl.html</a></p>
<h2 id="硬件加速-Hardware-Acceleration"><a href="#硬件加速-Hardware-Acceleration" class="headerlink" title="硬件加速 Hardware Acceleration"></a>硬件加速 Hardware Acceleration</h2><p><a href="https://developer.android.google.cn/guide/topics/graphics/hardware-accel.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/graphics/hardware-accel.html</a></p>
<h2 id="计算-Computation"><a href="#计算-Computation" class="headerlink" title="计算 Computation"></a>计算 Computation</h2><p><a href="https://developer.android.google.cn/guide/topics/renderscript/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/renderscript/index.html</a></p>
<h2 id="RenderScript"><a href="#RenderScript" class="headerlink" title="RenderScript"></a>RenderScript</h2><p><a href="https://developer.android.google.cn/guide/topics/renderscript/compute.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/renderscript/compute.html</a></p>
<h2 id="高级-RenderScript"><a href="#高级-RenderScript" class="headerlink" title="高级 RenderScript"></a>高级 RenderScript</h2><p><a href="https://developer.android.google.cn/guide/topics/renderscript/advanced.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/renderscript/advanced.html</a></p>
<h2 id="Runtime-API-参考"><a href="#Runtime-API-参考" class="headerlink" title="Runtime API 参考"></a>Runtime API 参考</h2><p><a href="https://developer.android.google.cn/guide/topics/renderscript/reference/overview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/renderscript/reference/overview.html</a></p>
<h2 id="媒体和相机-Media-and-Camera"><a href="#媒体和相机-Media-and-Camera" class="headerlink" title="媒体和相机 Media and Camera"></a>媒体和相机 Media and Camera</h2><p><a href="https://developer.android.google.cn/guide/topics/media/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/index.html</a></p>
<h2 id="媒体回放-MediaPlayer"><a href="#媒体回放-MediaPlayer" class="headerlink" title="媒体回放 MediaPlayer"></a>媒体回放 MediaPlayer</h2><p><a href="https://developer.android.google.cn/guide/topics/media/mediaplayer.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/mediaplayer.html</a></p>
<h2 id="媒体路由器-MediaRouter-API"><a href="#媒体路由器-MediaRouter-API" class="headerlink" title="媒体路由器 MediaRouter API"></a>媒体路由器 MediaRouter API</h2><p><a href="https://developer.android.google.cn/guide/topics/media/mediarouter.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/mediarouter.html</a></p>
<h2 id="媒体路由提供程序-Media-Route-Provider-API"><a href="#媒体路由提供程序-Media-Route-Provider-API" class="headerlink" title="媒体路由提供程序 Media Route Provider API"></a>媒体路由提供程序 Media Route Provider API</h2><p><a href="https://developer.android.google.cn/guide/topics/media/mediarouteprovider.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/mediarouteprovider.html</a></p>
<h2 id="ExoPlayer"><a href="#ExoPlayer" class="headerlink" title="ExoPlayer"></a>ExoPlayer</h2><p><a href="https://developer.android.google.cn/guide/topics/media/exoplayer.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/exoplayer.html</a></p>
<h2 id="支持的媒体格式-Supported-Media-Formats"><a href="#支持的媒体格式-Supported-Media-Formats" class="headerlink" title="支持的媒体格式 Supported Media Formats"></a>支持的媒体格式 Supported Media Formats</h2><p><a href="https://developer.android.google.cn/guide/topics/media/media-formats.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/media-formats.html</a></p>
<h2 id="音频采集-MediaRecorder"><a href="#音频采集-MediaRecorder" class="headerlink" title="音频采集 MediaRecorder"></a>音频采集 MediaRecorder</h2><p><a href="https://developer.android.google.cn/guide/topics/media/mediarecorder.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/mediarecorder.html</a></p>
<h2 id="相机-Camera-API"><a href="#相机-Camera-API" class="headerlink" title="相机 Camera API"></a>相机 Camera API</h2><p><a href="https://developer.android.google.cn/guide/topics/media/camera.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/media/camera.html</a></p>
<h2 id="位置和传感器-Location-and-Sensors-APIs"><a href="#位置和传感器-Location-and-Sensors-APIs" class="headerlink" title="位置和传感器 Location and Sensors APIs"></a>位置和传感器 Location and Sensors APIs</h2><p><a href="https://developer.android.google.cn/guide/topics/sensors/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/sensors/index.html</a></p>
<h2 id="位置和地图-Location-and-Maps"><a href="#位置和地图-Location-and-Maps" class="headerlink" title="位置和地图 Location and Maps"></a>位置和地图 Location and Maps</h2><p><a href="https://developer.android.google.cn/guide/topics/location/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/location/index.html</a></p>
<h2 id="位置策略-Location-Strategies"><a href="#位置策略-Location-Strategies" class="headerlink" title="位置策略 Location Strategies"></a>位置策略 Location Strategies</h2><p><a href="https://developer.android.google.cn/guide/topics/location/strategies.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/location/strategies.html</a></p>
<h2 id="传感器概览-Sensors-Overview"><a href="#传感器概览-Sensors-Overview" class="headerlink" title="传感器概览 Sensors Overview"></a>传感器概览 Sensors Overview</h2><p><a href="https://developer.android.google.cn/guide/topics/sensors/sensors_overview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/sensors/sensors_overview.html</a></p>
<h2 id="运动传感器-Motion-Sensors"><a href="#运动传感器-Motion-Sensors" class="headerlink" title="运动传感器 Motion Sensors"></a>运动传感器 Motion Sensors</h2><p><a href="https://developer.android.google.cn/guide/topics/sensors/sensors_motion.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/sensors/sensors_motion.html</a></p>
<h2 id="位置传感器-Position-Sensors"><a href="#位置传感器-Position-Sensors" class="headerlink" title="位置传感器 Position Sensors"></a>位置传感器 Position Sensors</h2><p><a href="https://developer.android.google.cn/guide/topics/sensors/sensors_position.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/sensors/sensors_position.html</a></p>
<h2 id="环境传感器-Environment-Sensors"><a href="#环境传感器-Environment-Sensors" class="headerlink" title="环境传感器 Environment Sensors"></a>环境传感器 Environment Sensors</h2><p><a href="https://developer.android.google.cn/guide/topics/sensors/sensors_environment.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/sensors/sensors_environment.html</a></p>
<h2 id="连接-Connectivity"><a href="#连接-Connectivity" class="headerlink" title="连接 Connectivity"></a>连接 Connectivity</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/index.html</a></p>
<h2 id="蓝牙"><a href="#蓝牙" class="headerlink" title="蓝牙"></a>蓝牙</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/bluetooth.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/bluetooth.html</a></p>
<h2 id="蓝牙低功耗-Bluetooth-Low-Energy"><a href="#蓝牙低功耗-Bluetooth-Low-Energy" class="headerlink" title="蓝牙低功耗 Bluetooth Low Energy"></a>蓝牙低功耗 Bluetooth Low Energy</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/bluetooth-le.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/bluetooth-le.html</a></p>
<h2 id="NFC"><a href="#NFC" class="headerlink" title="NFC"></a>NFC</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/nfc/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/nfc/index.html</a></p>
<h2 id="NFC-基础知识-NFC-Basics"><a href="#NFC-基础知识-NFC-Basics" class="headerlink" title="NFC 基础知识 NFC Basics"></a>NFC 基础知识 NFC Basics</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/nfc/nfc.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/nfc/nfc.html</a></p>
<h2 id="高级-NFC-Advanced-NFC"><a href="#高级-NFC-Advanced-NFC" class="headerlink" title="高级 NFC Advanced NFC"></a>高级 NFC Advanced NFC</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/nfc/advanced-nfc.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/nfc/advanced-nfc.html</a></p>
<h2 id="基于主机的卡模拟-Host-based-Card-Emulation"><a href="#基于主机的卡模拟-Host-based-Card-Emulation" class="headerlink" title="基于主机的卡模拟 Host-based Card Emulation"></a>基于主机的卡模拟 Host-based Card Emulation</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/nfc/hce.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/nfc/hce.html</a></p>
<h2 id="Wi-Fi-P2P"><a href="#Wi-Fi-P2P" class="headerlink" title="Wi-Fi P2P"></a>Wi-Fi P2P</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/wifip2p.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/wifip2p.html</a></p>
<h2 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/usb/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/usb/index.html</a></p>
<h2 id="配件-USB-Accessory"><a href="#配件-USB-Accessory" class="headerlink" title="配件 USB Accessory"></a>配件 USB Accessory</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/usb/accessory.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/usb/accessory.html</a></p>
<h2 id="主机-USB-Host"><a href="#主机-USB-Host" class="headerlink" title="主机 USB Host"></a>主机 USB Host</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/usb/host.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/usb/host.html</a></p>
<h2 id="SIP-Session-Initiation-Protocol"><a href="#SIP-Session-Initiation-Protocol" class="headerlink" title="SIP Session Initiation Protocol"></a>SIP Session Initiation Protocol</h2><p><a href="https://developer.android.google.cn/guide/topics/connectivity/sip.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/connectivity/sip.html</a></p>
<h2 id="文本和输入-Text-and-Input"><a href="#文本和输入-Text-and-Input" class="headerlink" title="文本和输入 Text and Input"></a>文本和输入 Text and Input</h2><p><a href="https://developer.android.google.cn/guide/topics/text/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/text/index.html</a></p>
<h2 id="复制和粘贴-Copy-and-Paste"><a href="#复制和粘贴-Copy-and-Paste" class="headerlink" title="复制和粘贴 Copy and Paste"></a>复制和粘贴 Copy and Paste</h2><p><a href="https://developer.android.google.cn/guide/topics/text/copy-paste.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/text/copy-paste.html</a></p>
<h2 id="创建-IME-Creating-an-Input-Method"><a href="#创建-IME-Creating-an-Input-Method" class="headerlink" title="创建 IME Creating an Input Method"></a>创建 IME Creating an Input Method</h2><p><a href="https://developer.android.google.cn/guide/topics/text/creating-input-method.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/text/creating-input-method.html</a></p>
<h2 id="拼写检查程序-Spelling-Checker-Framework"><a href="#拼写检查程序-Spelling-Checker-Framework" class="headerlink" title="拼写检查程序 Spelling Checker Framework"></a>拼写检查程序 Spelling Checker Framework</h2><p><a href="https://developer.android.google.cn/guide/topics/text/spell-checker-framework.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/text/spell-checker-framework.html</a></p>
<h2 id="数据存储-Data-Storage"><a href="#数据存储-Data-Storage" class="headerlink" title="数据存储 Data Storage"></a>数据存储 Data Storage</h2><p><a href="https://developer.android.google.cn/guide/topics/data/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/data/index.html</a></p>
<h2 id="存储选项"><a href="#存储选项" class="headerlink" title="存储选项"></a>存储选项</h2><p><a href="https://developer.android.google.cn/guide/topics/data/data-storage.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/data/data-storage.html</a></p>
<h2 id="数据备份-Backing-up-App-Data-to-the-Cloud"><a href="#数据备份-Backing-up-App-Data-to-the-Cloud" class="headerlink" title="数据备份 Backing up App Data to the Cloud"></a>数据备份 Backing up App Data to the Cloud</h2><p><a href="https://developer.android.google.cn/guide/topics/data/backup.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/data/backup.html</a></p>
<h2 id="应用安装位置-App-Install-Location"><a href="#应用安装位置-App-Install-Location" class="headerlink" title="应用安装位置 App Install Location"></a>应用安装位置 App Install Location</h2><p><a href="https://developer.android.google.cn/guide/topics/data/install-location.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/data/install-location.html</a></p>
<h2 id="Android-库"><a href="#Android-库" class="headerlink" title="Android 库"></a>Android 库</h2><p><a href="https://developer.android.google.cn/topic/libraries/index.html" target="_blank" rel="external">https://developer.android.google.cn/topic/libraries/index.html</a></p>
<h2 id="支持库"><a href="#支持库" class="headerlink" title="支持库"></a>支持库</h2><p><a href="https://developer.android.google.cn/topic/libraries/support-library/index.html" target="_blank" rel="external">https://developer.android.google.cn/topic/libraries/support-library/index.html</a></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><a href="https://developer.android.google.cn/topic/libraries/support-library/features.html" target="_blank" rel="external">https://developer.android.google.cn/topic/libraries/support-library/features.html</a></p>
<h2 id="设置-1"><a href="#设置-1" class="headerlink" title="设置"></a>设置</h2><p><a href="https://developer.android.google.cn/topic/libraries/support-library/setup.html" target="_blank" rel="external">https://developer.android.google.cn/topic/libraries/support-library/setup.html</a></p>
<h2 id="修订历史记录-Recent-Support-Library-Revisions"><a href="#修订历史记录-Recent-Support-Library-Revisions" class="headerlink" title="修订历史记录 Recent Support Library Revisions"></a>修订历史记录 Recent Support Library Revisions</h2><p><a href="https://developer.android.google.cn/topic/libraries/support-library/revisions.html" target="_blank" rel="external">https://developer.android.google.cn/topic/libraries/support-library/revisions.html</a></p>
<h2 id="数据绑定库-Data-Binding-Library"><a href="#数据绑定库-Data-Binding-Library" class="headerlink" title="数据绑定库 Data Binding Library"></a>数据绑定库 Data Binding Library</h2><p><a href="https://developer.android.google.cn/topic/libraries/data-binding/index.html" target="_blank" rel="external">https://developer.android.google.cn/topic/libraries/data-binding/index.html</a></p>
<h2 id="测试支持库"><a href="#测试支持库" class="headerlink" title="测试支持库"></a>测试支持库</h2><p><a href="https://developer.android.google.cn/topic/libraries/testing-support-library/index.html" target="_blank" rel="external">https://developer.android.google.cn/topic/libraries/testing-support-library/index.html</a></p>
<h2 id="管理-Administration"><a href="#管理-Administration" class="headerlink" title="管理 Administration"></a>管理 Administration</h2><p><a href="https://developer.android.google.cn/guide/topics/admin/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/admin/index.html</a></p>
<h2 id="设备政策-Device-Administration"><a href="#设备政策-Device-Administration" class="headerlink" title="设备政策 Device Administration"></a>设备政策 Device Administration</h2><p><a href="https://developer.android.google.cn/guide/topics/admin/device-admin.html" target="_blank" rel="external">https://developer.android.google.cn/guide/topics/admin/device-admin.html</a></p>
<h2 id="网络应用-Web-Apps"><a href="#网络应用-Web-Apps" class="headerlink" title="网络应用 Web Apps"></a>网络应用 Web Apps</h2><p><a href="https://developer.android.google.cn/guide/webapps/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/webapps/index.html</a></p>
<h2 id="在网络应用中支持不同屏幕-Supporting-Different-Screens-in-Web-Apps"><a href="#在网络应用中支持不同屏幕-Supporting-Different-Screens-in-Web-Apps" class="headerlink" title="在网络应用中支持不同屏幕 Supporting Different Screens in Web Apps"></a>在网络应用中支持不同屏幕 Supporting Different Screens in Web Apps</h2><p><a href="https://developer.android.google.cn/guide/webapps/targeting.html" target="_blank" rel="external">https://developer.android.google.cn/guide/webapps/targeting.html</a></p>
<h2 id="在-WebView-中构建网络应用-Building-Web-Apps-in-WebView"><a href="#在-WebView-中构建网络应用-Building-Web-Apps-in-WebView" class="headerlink" title="在 WebView 中构建网络应用 Building Web Apps in WebView"></a>在 WebView 中构建网络应用 Building Web Apps in WebView</h2><p><a href="https://developer.android.google.cn/guide/webapps/webview.html" target="_blank" rel="external">https://developer.android.google.cn/guide/webapps/webview.html</a></p>
<h2 id="迁移到-Android-4-4-中的-WebView-Migrating-to-WebView-in-Android-4-4"><a href="#迁移到-Android-4-4-中的-WebView-Migrating-to-WebView-in-Android-4-4" class="headerlink" title="迁移到 Android 4.4 中的 WebView Migrating to WebView in Android 4.4"></a>迁移到 Android 4.4 中的 WebView Migrating to WebView in Android 4.4</h2><p><a href="https://developer.android.google.cn/guide/webapps/migrating.html" target="_blank" rel="external">https://developer.android.google.cn/guide/webapps/migrating.html</a></p>
<h2 id="调试网络应用-Debugging-Web-Apps"><a href="#调试网络应用-Debugging-Web-Apps" class="headerlink" title="调试网络应用 Debugging Web Apps"></a>调试网络应用 Debugging Web Apps</h2><p><a href="https://developer.android.google.cn/guide/webapps/debugging.html" target="_blank" rel="external">https://developer.android.google.cn/guide/webapps/debugging.html</a></p>
<h2 id="网络应用最佳做法-Best-Practices-for-Web-Apps"><a href="#网络应用最佳做法-Best-Practices-for-Web-Apps" class="headerlink" title="网络应用最佳做法 Best Practices for Web Apps"></a>网络应用最佳做法 Best Practices for Web Apps</h2><p><a href="https://developer.android.google.cn/guide/webapps/best-practices.html" target="_blank" rel="external">https://developer.android.google.cn/guide/webapps/best-practices.html</a></p>
<h2 id="最佳实践-Best-Practices"><a href="#最佳实践-Best-Practices" class="headerlink" title="最佳实践 Best Practices"></a>最佳实践 Best Practices</h2><p><a href="https://developer.android.google.cn/guide/practices/index.html" target="_blank" rel="external">https://developer.android.google.cn/guide/practices/index.html</a></p>
<h2 id="支持多种屏幕"><a href="#支持多种屏幕" class="headerlink" title="支持多种屏幕"></a>支持多种屏幕</h2><p><a href="https://developer.android.google.cn/guide/practices/screens_support.html" target="_blank" rel="external">https://developer.android.google.cn/guide/practices/screens_support.html</a></p>
<h2 id="分配到特定屏幕-Distributing-to-Specific-Screens"><a href="#分配到特定屏幕-Distributing-to-Specific-Screens" class="headerlink" title="分配到特定屏幕 Distributing to Specific Screens"></a>分配到特定屏幕 Distributing to Specific Screens</h2><p><a href="https://developer.android.google.cn/guide/practices/screens-distribution.html" target="_blank" rel="external">https://developer.android.google.cn/guide/practices/screens-distribution.html</a></p>
<h2 id="屏幕兼容性模式-Screen-Compatibility-Mode"><a href="#屏幕兼容性模式-Screen-Compatibility-Mode" class="headerlink" title="屏幕兼容性模式 Screen Compatibility Mode"></a>屏幕兼容性模式 Screen Compatibility Mode</h2><p><a href="https://developer.android.google.cn/guide/practices/screen-compat-mode.html" target="_blank" rel="external">https://developer.android.google.cn/guide/practices/screen-compat-mode.html</a></p>
<h2 id="支持平板电脑和手机-Supporting-Tablets-and-Handsets"><a href="#支持平板电脑和手机-Supporting-Tablets-and-Handsets" class="headerlink" title="支持平板电脑和手机 Supporting Tablets and Handsets"></a>支持平板电脑和手机 Supporting Tablets and Handsets</h2><p><a href="https://developer.android.google.cn/guide/practices/tablets-and-handsets.html" target="_blank" rel="external">https://developer.android.google.cn/guide/practices/tablets-and-handsets.html</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title></title>
      <url>/Blog/2017/10/11/%E8%8E%B7%E5%8F%96%E5%B7%B2%E5%AE%89%E8%A3%85APP%E7%9A%84apk%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>###获取程序包名<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm list packages</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ adb shell pm list packages</div><div class="line">package:android</div><div class="line">package:cn.wps.moffice</div><div class="line">package:com.android.backupconfirm</div><div class="line">package:com.android.bluetooth</div><div class="line">package:com.android.browser</div><div class="line">package:com.android.calculator2</div><div class="line">package:com.android.camera</div><div class="line">package:com.android.certinstaller</div><div class="line">package:com.android.contacts</div></pre></td></tr></table></figure>
<p>###找到apk的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell pm path com.tence01.mm</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ adb shell pm path com.tence01.mm</div><div class="line">package:/data/app/com.tence01.mm-1.apk</div></pre></td></tr></table></figure>
<p>###取出apk<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb pull /data/app/com.tence01.mm-1.apk ~/apks</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ adb pull /data/app/com.tence01.mm-1.apk ~/apks</div><div class="line">2407 KB/s (25567735 bytes in 10.370s)</div></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Android开发问题收集]]></title>
      <url>/Blog/2017/07/26/Android%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<h3 id="The-APK-file-does-not-exist-on-disk-Error-while-Installing-APK"><a href="#The-APK-file-does-not-exist-on-disk-Error-while-Installing-APK" class="headerlink" title="The APK file  does not exist on disk. Error while Installing APK"></a>The APK file  does not exist on disk. Error while Installing APK</h3><blockquote>
<p>清楚缓存 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm -rfv ~/Library/Caches/AndroidStudio*</div></pre></td></tr></table></figure>
<blockquote>
<p>刷新gradle</p>
</blockquote>
<p><img src="https://i.stack.imgur.com/2KSyU.png" alt="refresh all gradle projects"></p>
<h3 id="java-lang-IllegalArgumentExceptio"><a href="#java-lang-IllegalArgumentExceptio" class="headerlink" title="java.lang.IllegalArgumentExceptio"></a>java.lang.IllegalArgumentExceptio</h3><blockquote>
<p>该异常表示view没有添加到窗口管理器，通常是我们dismiss对话框的时候，activity已经不存在了，建议不要在非UI线程操作对话框。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if(!activity.isFinishing &amp;&amp; dialog!=null &amp;&amp; dialog.isShow())&#123;</div><div class="line">	dialog.dismiss();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="android-view-WindowManager-BadTokenException"><a href="#android-view-WindowManager-BadTokenException" class="headerlink" title="android.view.WindowManager$BadTokenException"></a>android.view.WindowManager$BadTokenException</h3><blockquote>
<p>该异常表示不能添加窗口，通常是所要依附的view已经不存在导致的。</p>
<p>通常出现在耗时的操作结束之后显示dailog，但是此时activity已经结束了。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if(!activity.isFinishing &amp;&amp; dialog!=null )&#123;</div><div class="line">	dialog.show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Material简单使用]]></title>
      <url>/Blog/2017/07/21/Material%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>首先介绍下Android的各个位置的名称：<br><img src="https://developer.android.com/training/material/images/ThemeColors.png" alt="Android 谷歌md规范"></p>
<p>可以看到，最上面的是状态栏，最下面的是导航栏。<br>如果您想为状态栏设置颜色，你可以通过制定android:statusBarColor来定义状态栏颜色，默认情况下，Android：statusBarColor的颜色继承Android：colorPrimaryDark.</p>
<p>   您也可自行将状态栏移到后侧。例如，您想在一个照片上以透明的方式显示状态栏，同时利用细微的深色渐变以确保白色状态图标仍保持可见。 如果要执行此操作，请将 android:statusBarColor 属性设置为 @android:color/transparent 并根据需要调整窗口标志。您也可以使用 Window.setStatusBarColor() 方法进行动画或淡出设置。</p>
<p>   colorPrimaryDark（状态栏底色）：在风格 (styles) 或是主题 (themes) 里进行设定。<br>App bar 底色<br>这个设定分为二，若你的 android app 仍是使用 actionbar ，则直接在风格 (styles) 或是主题 (themes) 里进行设定 colorPrimary 参数即可；<br>可若是采用 toolbar 的话，则要在界面 (layout) 里面设定 toolbar 控件的 background 属性。<br>navigationBarColor（导航栏底色）：</p>
<p>colorPrimaryDark</p>
<p>状态栏背景色。<br>在 style 的属性中设置。<br>textColorPrimary</p>
<p>App bar 上的标题与更多菜单中的文字颜色。<br>在 style 的属性中设置。<br>App bar 的背景色</p>
<p>Actionbar 的背景色设定在 style 中的 colorPrimary。<br>Toolbar 的背景色在layout文件中设置background属性。<br>colorAccent</p>
<p>各控制元件(如：check box、switch 或是 radoi) 被勾选 (checked) 或是选定 (selected) 的颜色。<br>在 style 的属性中设置。<br>colorControlNormal</p>
<p>各控制元件的预设颜色。<br>在 style 的属性中设置<br>windowBackground</p>
<p>App 的背景色。<br>在 style 的属性中设置<br>navigationBarColor</p>
<p>导航栏的背景色，但只能用在 API Level 21 (Android 5) 以上的版本<br>在 style 的属性中设置</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[AndroidStudio常用的mac快捷键]]></title>
      <url>/Blog/2017/07/18/AndroidStudio%E5%B8%B8%E7%94%A8%E7%9A%84mac%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Studio减小APK体积]]></title>
      <url>/Blog/2017/07/18/Android%20Studio%E5%87%8F%E5%B0%8FAPK%E4%BD%93%E7%A7%AF/</url>
      <content type="html"><![CDATA[<h2 id="1-ProGuard"><a href="#1-ProGuard" class="headerlink" title="1. ProGuard"></a>1. ProGuard</h2><p>Proguard可以删除无效的Java code来减小apk的体积</p>
<h2 id="2-Split-Apk"><a href="#2-Split-Apk" class="headerlink" title="2. Split Apk"></a>2. Split Apk</h2><p><a href="https://developer.android.com/studio/build/configure-apk-splits.html" target="_blank" rel="external">Split Apk</a>谷歌官方支持的，可以为根据设备密度和ABI创建特定的Apk包，大大减少每个apk的体积。</p>
<h2 id="3-ReDex"><a href="#3-ReDex" class="headerlink" title="3. ReDex"></a>3. ReDex</h2><p>Facebook开源维护的，压缩代码的同时，还可以提高性能</p>
<h2 id="4-ShrinkResources"><a href="#4-ShrinkResources" class="headerlink" title="4. ShrinkResources"></a>4. ShrinkResources</h2><p>去除无效的资源文件，图片是apk体积的大户，减少图片资源，就能有效的减少apk体积。在build.gradle里面使用</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">release &#123;</div><div class="line">...</div><div class="line">  shrinkResources <span class="keyword">true</span></div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="5-resConfigs"><a href="#5-resConfigs" class="headerlink" title="5. resConfigs"></a>5. resConfigs</h2><p>当应用不需要支持多国语言的时候，可以通过resConfig去除无用的语言资源，例如下面的配置就只保留了中文和英文的语言资源：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">defaultConfig &#123;</div><div class="line">...</div><div class="line">  resConfigs <span class="string">"en"</span>, <span class="string">"zh"</span></div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>注意：</strong></p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">resConfigs <span class="string">"hdpi"</span>, <span class="string">"xhdpi"</span>, <span class="string">"xxhdpi"</span>, <span class="string">"xxxhdpi"</span></div></pre></td></tr></table></figure>
<p><strong>已经在新版本中废弃了，代替方案是在Gradle中使用splits根据不同的ABI以及不同的屏幕密度分别打包</strong></p>
<h2 id="6-Vector-Drawables"><a href="#6-Vector-Drawables" class="headerlink" title="6. Vector Drawables"></a>6. Vector Drawables</h2><p>尽量使用vector资源，因为Vector资源文件大小，会比图片的小很多</p>
<h2 id="7-WebP-file"><a href="#7-WebP-file" class="headerlink" title="7. WebP file"></a>7. WebP file</h2><p>使用WebP格式的图片资源，相比PNG和JPEG，WebP在保证质量的同时，压缩率更好。</p>
<h2 id="8-优化图片资源"><a href="#8-优化图片资源" class="headerlink" title="8. 优化图片资源"></a>8. 优化图片资源</h2><p>可以使用TinyPNG, OptiPNG等压缩图片。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Studio常用技巧]]></title>
      <url>/Blog/2017/07/18/Android%20Studio%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<h2 id="tools-attribute"><a href="#tools-attribute" class="headerlink" title="tools:attribute"></a>tools:attribute</h2><p>如果你想查看布局的文字效果，但是有不想运行ed时候显示出来，你就可以通过’tools:something=”value”‘来实现，你要做的只有两点</p>
<ol>
<li>在根布局中添加xmlns:tools=”<a href="http://schemas.android.com/tools" target="_blank" rel="external">http://schemas.android.com/tools</a>“</li>
<li>在TextView中使用’tools:something=”value”‘属性。</li>
</ol>
<p> <img src="http://mmbiz.qpic.cn/mmbiz_gif/y5HvXaQmpqlia7kPokpRXdHO05FiakCnm6VWRu5pWIcABUibCsbUcBuHOhAGEfr19a4pL0bVdZobfdlUYOcibn14XQ/0?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="tools：text"></p>
<blockquote>
<p>以前都是每次都用Android：text=：=“text”查看效果，然后弄好了之后再去删</p>
</blockquote>
<h2 id="Extract-Resource"><a href="#Extract-Resource" class="headerlink" title="Extract Resource"></a>Extract Resource</h2><p>如果你在某个布局文件里面，直接使用了某个String或者某个dimen数值，你可以通过option+enter直接选择Extract String/Dimension Resource，将对应的String或者dimen加入到对应的String.xml 或者dimen.xml</p>
<p><img src="http://mmbiz.qpic.cn/mmbiz_gif/y5HvXaQmpqlia7kPokpRXdHO05FiakCnm61DjNxib4bEW2Lr8p3LvXeX3hrC2gUWibuSkhIp1Cb39DqqeoF6ceDicAQ/0?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="Extract Resource"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle实践]]></title>
      <url>/Blog/2017/07/06/Gradle%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<h1 id="gradle-task示例"><a href="#gradle-task示例" class="headerlink" title="gradle task示例"></a>gradle task示例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">task compile &lt;&lt; &#123;</div><div class="line">    println <span class="string">"Compiled"</span></div><div class="line">&#125;</div><div class="line">task clean &lt;&lt; &#123;</div><div class="line">    println <span class="string">"Clean"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="task之间相互依赖"><a href="#task之间相互依赖" class="headerlink" title="task之间相互依赖"></a>task之间相互依赖</h3><blockquote>
<p>compile.dependsOn  clean</p>
</blockquote>
<h3 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile.mustRunAfter clean  <span class="comment">//只有执行了clean执行之后就会执行compile</span></div></pre></td></tr></table></figure>
<h3 id="自定义Property"><a href="#自定义Property" class="headerlink" title="自定义Property"></a>自定义Property</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ext.property1 = <span class="string">"this is property1"</span></div><div class="line">ext&#123;</div><div class="line">	property2 = <span class="string">"this is property2"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="依赖其他moudle"><a href="#依赖其他moudle" class="headerlink" title="依赖其他moudle"></a>依赖其他moudle</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">	<span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':library'</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Gradle为每个moudle都会生成一个build-gradle，为了管理这些moudle，他还会在根目录下生成一个build-gradle"><a href="#Gradle为每个moudle都会生成一个build-gradle，为了管理这些moudle，他还会在根目录下生成一个build-gradle" class="headerlink" title="Gradle为每个moudle都会生成一个build.gradle，为了管理这些moudle，他还会在根目录下生成一个build.gradle"></a>Gradle为每个moudle都会生成一个build.gradle，为了管理这些moudle，他还会在根目录下生成一个build.gradle</h3><p><img src="http://ww1.sinaimg.cn/large/d948997dgy1fha5q0bwtrj20hk09ggmv.jpg" alt="allprojexts配置"></p>
<p><strong>allprojects()方法将repositories配置一次性地应用于所有的module（子Project）和root-project本身，当然也包括定义的Task，这个task配置到所有module里面了和root-project。<br>subprojects()方法用于配置所有的子Project（不包含根Project）</strong></p>
<p>###引入其他的Gradle文件的task<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply <span class="keyword">from</span>: <span class="string">'../nuild-config/build.gradle'</span></div></pre></td></tr></table></figure></p>
<h3 id="控制输出名称和路径"><a href="#控制输出名称和路径" class="headerlink" title="控制输出名称和路径"></a>控制输出名称和路径</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">android.applicationVariants.all &#123; variant -&gt;</div><div class="line"></div><div class="line">    variant.outputs.<span class="keyword">each</span> &#123; output -&gt;</div><div class="line">        <span class="keyword">def</span> outputFile = output.outputFile</div><div class="line">        <span class="keyword">if</span> (outputFile != <span class="keyword">null</span> &amp;&amp; outputFile.name.endsWith(<span class="string">'.apk'</span>)) &#123;</div><div class="line">            <span class="keyword">def</span> fileName = outputFile.name;</div><div class="line">            <span class="keyword">if</span> (android.defaultConfig.versionName != <span class="keyword">null</span>) &#123;</div><div class="line">                fileName = fileName.replace(<span class="string">".apk"</span>, <span class="string">"-$&#123;android.defaultConfig.versionName&#125;.apk"</span>)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">project</span>.hasProperty(<span class="string">'OUT_PUT_APK_SUFFIX_PARA'</span>)) &#123;</div><div class="line">                fileName = fileName.replace(<span class="string">".apk"</span>, <span class="string">"-$&#123;OUT_PUT_APK_SUFFIX_PARA&#125;.apk"</span>)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">def</span> today = <span class="keyword">new</span> Date().format(<span class="string">'yyMMddHHmm'</span>);</div><div class="line">            fileName = fileName.replace(<span class="string">".apk"</span>, <span class="string">"-$&#123;today&#125;.apk"</span>)</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">project</span>.hasProperty(<span class="string">'OUT_PUT_DIR_PARA'</span>)) &#123;</div><div class="line">                <span class="keyword">File</span> output_dir1 = <span class="keyword">file</span>(<span class="string">"$&#123;OUT_PUT_DIR_PARA&#125;"</span>);</div><div class="line">                output.outputFile = <span class="keyword">new</span> <span class="keyword">File</span>(output_dir1, fileName)</div><div class="line">                <span class="keyword">println</span> <span class="string">"输出文件位置： "</span> + output.outputFile</div><div class="line">                <span class="comment">//&#125;</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                output.outputFile = <span class="keyword">new</span> <span class="keyword">File</span>(outputFile.parent, fileName)</div><div class="line">                <span class="keyword">println</span> <span class="string">"输出文件位置： "</span> + output.outputFile</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###拼接字符串<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ext.tem = <span class="string">'tem'</span></div><div class="line"><span class="keyword">def</span> name = <span class="string">"my name is $tem"</span></div></pre></td></tr></table></figure></p>
<h2 id="Gradle执行顺序"><a href="#Gradle执行顺序" class="headerlink" title="Gradle执行顺序"></a>Gradle执行顺序</h2><h3 id="dependsOn"><a href="#dependsOn" class="headerlink" title="dependsOn"></a>dependsOn</h3><p><strong>如果我们想执行的task A依赖于task B</strong></p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> A &lt;&lt; &#123;</div><div class="line">	<span class="keyword">println</span> <span class="string">"Hello From A"</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">task</span> B &lt;&lt; &#123;</div><div class="line">    <span class="keyword">println</span> <span class="string">"Hello From B"</span></div><div class="line">&#125;</div><div class="line">A.dependsOn B</div></pre></td></tr></table></figure>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> A &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from A'</span>&#125;</div><div class="line"><span class="keyword">task</span> B &#123;</div><div class="line">    dependsOn A</div><div class="line">    <span class="keyword">doLast</span> &#123;</div><div class="line">        <span class="keyword">println</span> <span class="string">'Hello from B'</span>  </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样我们执行Gradle B的时候就会先执行 A,上面两种写法的效果是一样的。</p>
<blockquote>
<p>如果我们想在已近存在task依赖中插入我们的task，改怎么办呢？</p>
</blockquote>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> A &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from A'</span>&#125;</div><div class="line"><span class="keyword">task</span> B &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from B'</span>&#125;</div><div class="line"><span class="keyword">task</span> C &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from C'</span>&#125;</div><div class="line">B.dependsOn A</div><div class="line">C.dependsOn B</div></pre></td></tr></table></figure>
<p><strong>加入我们的新task</strong></p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> B1 &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from B1'</span>&#125;</div><div class="line">B1.dependsOn B</div><div class="line">C.dependsOn B1</div></pre></td></tr></table></figure>
<p>执行Gradle c</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">paveldudka$ gradle C</div><div class="line">:A</div><div class="line">Hello <span class="keyword">from</span> A</div><div class="line">:B</div><div class="line">Hello <span class="keyword">from</span> B</div><div class="line">:B1</div><div class="line">Hello <span class="keyword">from</span> B1</div><div class="line">:C</div><div class="line">Hello <span class="keyword">from</span> C</div></pre></td></tr></table></figure>
<p><img src="http://static.oschina.net/uploads/img/201509/21084247_m1Nh.png" alt="插入依赖"></p>
<p>###mustRunAfter<br>假设我们有三个task，其中一个依赖其他两个，代码如下：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> unit &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from unit tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> ui &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from UI tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> tests &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from all tests!'</span>&#125;</div><div class="line"></div><div class="line">tests.dependsOn unit</div><div class="line">tests.dependsOn ui</div></pre></td></tr></table></figure>
<p>执行Gradle tests结果</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">paveldudka$ gradle tests</div><div class="line">:ui</div><div class="line">Hello <span class="keyword">from</span> UI tests</div><div class="line">:unit</div><div class="line">Hello <span class="keyword">from</span> unit tests</div><div class="line">:tests</div><div class="line">Hello <span class="keyword">from</span> all tests!</div></pre></td></tr></table></figure>
<p><strong>尽管unit和UI会在tests之前执行，但是UI和unit的执行顺序是不能保证的，虽然看起来是按照字母表的执行，但这依赖于Gradle的默认实现，我们也不清楚具体是怎样的规则，因此如果们有先后顺序的区分，我们就不能依赖这种顺序</strong></p>
<p><strong>如果我希望unit先执行，然后子啊执行UI，一个解决办法就是UI依赖unit</strong></p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> unit &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from unit tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> ui &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from UI tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> tests &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from all tests!'</span>&#125;</div><div class="line"></div><div class="line">tests.dependsOn unit</div><div class="line">tests.dependsOn ui</div><div class="line">ui.dependsOn unit</div></pre></td></tr></table></figure>
<p><strong>但是有个问题，我们的UI task并不依赖于 unit ,每次执行UI task的时候都会执行unit，这就要用到 mustRunAfter了。这里指定 ui.mustRunAfter unit,这样如果UI和unit同事存在的时候，Gradle会先执行unit，他们也可以单独执行</strong></p>
<p>###finalizedBy<br>现在我们有UI和unit两个task，我们希望两个执行完了之后合并输出：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> unit &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from unit tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> ui &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from UI tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> tests &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from all tests!'</span>&#125;</div><div class="line"><span class="keyword">task</span> mergeReports &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Merging test reports'</span>&#125;</div><div class="line"></div><div class="line">tests.dependsOn unit</div><div class="line">tests.dependsOn ui</div><div class="line">ui.mustRunAfter unit</div><div class="line">mergeReports.dependsOn tests</div></pre></td></tr></table></figure>
<p><strong>这个task是能工作，但是看起来好笨啊。mergeReports从用户的角度来看感觉不是特别好。我希望执行tests task就可以获得测试报告，而不必知道mergeReports的存在。当然我可以把merge的逻辑挪到tests task中，但我不想把tests task搞的太臃肿，我还是继续把merge的逻辑放在mergeReports task中。<br>finalizeBy来救场了。顾名思义，finalizeBy就是在task执行完之后要执行的task。修改我们的脚本如下</strong></p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">task</span> unit &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from unit tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> ui &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from UI tests'</span>&#125;</div><div class="line"><span class="keyword">task</span> tests &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Hello from all tests!'</span>&#125;</div><div class="line"><span class="keyword">task</span> mergeReports &lt;&lt; &#123;<span class="keyword">println</span> <span class="string">'Merging test reports'</span>&#125;</div><div class="line"></div><div class="line">tests.dependsOn unit</div><div class="line">tests.dependsOn ui</div><div class="line">ui.mustRunAfter unit</div><div class="line">mergeReports.dependsOn tests</div><div class="line">tests.finalizedBy mergeReports</div></pre></td></tr></table></figure>
<p>现在执行tests task就可以拿到测试报告了：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">paveldudka$ gradle tests</div><div class="line">:unit</div><div class="line">Hello <span class="keyword">from</span> unit tests</div><div class="line">:ui</div><div class="line">Hello <span class="keyword">from</span> UI tests</div><div class="line">:tests</div><div class="line">Hello <span class="keyword">from</span> all tests!</div><div class="line">:mergeReports</div><div class="line">Merging test reports</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Gradle实践 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[DL插件化实践]]></title>
      <url>/Blog/2017/07/05/DL%E6%8F%92%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> 插件化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 插件化 </tag>
            
            <tag> DL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android反编译]]></title>
      <url>/Blog/2017/04/06/Android%E5%8F%8D%E7%BC%96%E8%AF%91/</url>
      <content type="html"><![CDATA[<p>工欲善其事必先利其器，反编译apk，首先我们需要必须的工具</p>
<blockquote>
<ul>
<li>apktool                            </li>
<li>dex2jar</li>
<li>jd-gui</li>
<li>AXMLPrinter</li>
</ul>
</blockquote>
<p>我做了一下整理，可以直接在这里下载所需的全部工具 <a href="http://pan.baidu.com/s/1i5mOe1J" target="_blank" rel="external">下载链接</a></p>
<h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3> <font color="#ff0000" size="5"> apktool</font>

<p> 获取资源文件，比如图片或者布局XML文件</p>
 <font color="#ff0000" size="5">dex2jar</font>

<p> 将class.dex文件转化成jar包</p>
 <font color="#ff0000" size="5">jd-gui</font>

<p> 查看class.dex转化的jar包<br> <font color="#ff0000" size="5">AXMLPrinter</font></p>
<p> 还原xml文件</p>
<h2 id="获取资源文件和XML文件"><a href="#获取资源文件和XML文件" class="headerlink" title="获取资源文件和XML文件"></a>获取资源文件和XML文件</h2><p>apktool获取资源文件：将aapt.exe,apktool.bat,apktool.jar 放到同一目录下，定位到apktool文件夹，运行一下命令：apktool.bat d -f test.apk test</p>
<blockquote>
<p>apktool.bat d -f [apk文件] [输出的文件夹]</p>
</blockquote>
<p><img src="http://ww1.sinaimg.cn/large/d948997dgy1fed0rojzywj20it0bumx5.jpg" alt="命令行"></p>
<p>反编译之后会在apktool所在目录下新建一个文件夹，文件夹目录如下<br><img src="http://ww1.sinaimg.cn/large/d948997dgy1fed0sys3gyj20hj07pjr8.jpg" alt="文件夹目录"></p>
<p><em>如果发现反编译出来的都是smali文件，可能是你使用的是旧的apktool,建议去官方网址下载 <a href="https://ibotpeaches.github.io/Apktool/" target="_blank" rel="external">apktool官方下载网址</a>，也可以使用我已经打包好的全套文件<a href="http://pan.baidu.com/s/1i5mOe1J" target="_blank" rel="external">百度网盘下载</a></em></p>
<h2 id="获取Java源代码"><a href="#获取Java源代码" class="headerlink" title="获取Java源代码"></a>获取Java源代码</h2><p>将apk文件更改后缀名为zip或者rar，解压之后目录如下：<br><img src="http://ww1.sinaimg.cn/large/d948997dgy1fed10t94pyj20j50803yg.jpg" alt="解压后文件目录"><br>可以看到，目录下面包含多个.dex文件，一般的小项目都会只有一个.dex文件，我这个是以支付宝为例，项目比较多，进行了分包处理。</p>
<p><em>在命令行下定位到dex2jar.bat所在的目录，dex2jar [dex文件的路径]</em><br><img src="http://ww1.sinaimg.cn/large/d948997dly1fed16hklqzj20it0buq2z.jpg" alt="dex获取源码"></p>
<p>在dex所在的目录下会生成一个class_dex2jar.jar文件，运行jd-gui文件夹下的jd-gui.exe ,并且用改工具打开之前生成的class_dex2jar.jar文件就可以查看Java源码啦。<br><img src="http://ww1.sinaimg.cn/large/d948997dgy1fed1aqqimjj20s90jatbu.jpg" alt="Java源码"></p>
<h2 id="获取AndroidManifest-xml"><a href="#获取AndroidManifest-xml" class="headerlink" title="获取AndroidManifest.xml"></a>获取AndroidManifest.xml</h2><p>打开我们解压后的apk文件夹，你会发现 Android开发必须的 AndroidManifest.xml文件，打开文件：<br><img src="http://ww1.sinaimg.cn/large/d948997dgy1fed1cozh4aj20ub0d6gq7.jpg" alt="AndroidManifest.xml"><br>wf,什么鬼，全是乱码。下面就要用到我们的AXMLPrinter工具来还原AndroidManifest.xml<br>命令行定位到AAXMLPrinter2.jar所在目录，运行下面的命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar AXMLPrinter2.jar AndroidManifest.xml &gt; AndroidManifest2.txt</div></pre></td></tr></table></figure></p>
<p>你会发现在AXMLPrinter2.jar目录下，会生成一个AndroidManifest2.txt，打开AndroidManifest2.txt发现我们能看懂了：<br><img src="http://ww1.sinaimg.cn/large/d948997dly1fed1msw9qjj20uk0jgmxt.jpg" alt="AndroidManifest文件"></p>
<p>这就是本次与大家分享的Android反编译，希望对大家有用。</p>
]]></content>
      
        <categories>
            
            <category> 反编译 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Retrofit的简单封装]]></title>
      <url>/Blog/2017/03/20/retrofit/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2016年，关于retrofit和okhttp这两个话题非常火，retrofit+okhhtp已经成为Android网络请求的主流框架了，看了一下现在公司的项目，还是使用的原始的HttpURLConnection，瞬间感觉有点low，通过自己的学习，决定对公司的网络请求进行一下改造，在这里做一下简单的总结，希望大家多多指正。</p>
<h1 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a>Retrofit</h1><p>  retrofit是一个基于okhttp的，适用于Android，Java的网络请求工具。我觉得它其实就是对okhttp做一下统一的封装，方便广大开发者的更快捷、更方便的使用。如果你对retrofit还不是很熟悉，可以去<a href="http://square.github.io/retrofit/" target="_blank" rel="external">Retrofit官网</a>了解下，我也会在接下来做个简单的使用说明。它既然这么火，而且已经进行很好的封装了，但是我们为什么还要对它封装呢？因为每个公司的业务不一样，这个框架大而且全，其实很多在我们的业务里面根本使用不到，所以我们需要个性化定制。</p>
<ol>
<li><p>首先创建一个网络请求API的Interface    </p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GitHubService</span> </span>&#123;</div><div class="line"> 		<span class="meta">@GET</span>(<span class="string">"users/&#123;user&#125;/repos"</span>)</div><div class="line"> 		Call&lt;List&lt;Repo&gt;&gt; listRepos(<span class="meta">@Path</span>(<span class="string">"user"</span>) String user);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>初始化Retrofit,并创建一个GitHubService interface</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">	Retrofit retrofit = new Retrofit.Builder()</div><div class="line">    .baseUrl(&quot;https://api.github.com/&quot;)</div><div class="line">    .build();</div><div class="line"></div><div class="line">	GitHubService service = retrofit.create(GitHubService.class);</div><div class="line">	```	</div><div class="line">	</div><div class="line">	</div><div class="line">3. 对GitHubService的方法进行同步或者一部的访问，来实现网络的请求(使用enqueue 或者 execute来执行发起请求，enqueue是是异步执行，而 execute是同步执行)</div></pre></td></tr></table></figure>
<p> Call<list<repo>&gt; repos = service.listRepos(“octocat”);</list<repo></p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">上面就是官网对retrofit的简单讲解，下面就进行我们的简单封装。</div><div class="line"># Interface的改造</div><div class="line">因为公司的网络请求都是在common包里面处理的，而和这个包是不会经常改动的，但是每次增加一个求情，都要改动一下common包里面的网络请求的Interface，这个不利于模块的解耦。下面是我对Interface的改造：	</div><div class="line"></div><div class="line">```java</div><div class="line">public interface NetInterface &#123;</div><div class="line">    @GET</div><div class="line">    Call get(@Url String url);</div><div class="line"></div><div class="line">    @POST</div><div class="line">    Call post(@Url String url, @Body RequestBody body);</div><div class="line"></div><div class="line">    @Multipart</div><div class="line">    @POST</div><div class="line">    Call updateFile(@Url String url, @Part MultipartBody.Part file, @PartMap HashMap&lt;String, RequestBody&gt; map);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/d948997dgy1fduncamc8lj21em0bcmzd.jpg" alt="Interface改造"></p>
<p>定义了三个方法，get、post、updateFile对应网络请求的GET、POST和文件上传，这样每次就只需传入一个url就可以进行网络请求，不用每次都去更改。</p>
<h1 id="Retrofit的封装NetUtils"><a href="#Retrofit的封装NetUtils" class="headerlink" title="Retrofit的封装NetUtils"></a>Retrofit的封装NetUtils</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NetUtils</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> NetUtils INSTANCE;</div><div class="line">    <span class="keyword">private</span> OkHttpClient mClient;</div><div class="line">    <span class="keyword">private</span> Retrofit mRetrofit;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;Call&gt; callLists=<span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">NetUtils</span><span class="params">()</span> </span>&#123;</div><div class="line">        OkHttpClient.Builder builder = <span class="keyword">new</span> OkHttpClient.Builder();</div><div class="line">        builder.connectTimeout(<span class="number">15</span>, TimeUnit.SECONDS);</div><div class="line">        builder.addInterceptor(<span class="keyword">new</span> NetInterceptor());</div><div class="line">        mClient = builder.build();</div><div class="line">        mRetrofit = <span class="keyword">new</span> Retrofit.Builder()</div><div class="line">                .baseUrl(<span class="string">""</span>)</div><div class="line">                .addConverterFactory(FastjsonConverterFactory.create())</div><div class="line">                .client(mClient)</div><div class="line">                .build();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> NetUtils <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">synchronized</span> (NetUtils.class) &#123;</div><div class="line">                <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>) &#123;</div><div class="line">                    INSTANCE = <span class="keyword">new</span> NetUtils();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> INSTANCE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Call <span class="title">get</span><span class="params">(String url)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mRetrofit.create(NetInterface.class).get(url);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Call <span class="title">post</span><span class="params">(String url, FormBody body)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mRetrofit.create(NetInterface.class).post(url, body);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Call <span class="title">updateFile</span><span class="params">(String url, MultipartBody.Part file, HashMap&lt;String, RequestBody&gt; body)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mRetrofit.create(NetInterface.class).updateFile(url, file, body);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在这里，可以设置缓存，设置统一的网络拦截器……，我这边写的都比较简单</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NetInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">        Response respone = chain.proceed(chain.request());</div><div class="line">        Log.d(<span class="string">"TAG"</span>, respone.request().url() + <span class="string">""</span>);</div><div class="line">        Log.d(<span class="string">"TAG"</span>, respone.body() + <span class="string">""</span>);</div><div class="line">        <span class="keyword">return</span> respone;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>简单的打印url，也可以在这里添加一些通用的参数<br><img src="http://ww1.sinaimg.cn/large/d948997dgy1fdup4d3ficj20vu0b440c.jpg" alt="NetInterceptor"></p>
<h1 id="请求工具类NetLoader"><a href="#请求工具类NetLoader" class="headerlink" title="请求工具类NetLoader"></a>请求工具类NetLoader</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NetLoader</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;Call&gt; callList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> HashMap&lt;String, Call&gt; callMap = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> String TAG = <span class="string">"TAG"</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Call <span class="title">get</span><span class="params">(String url, Callback callback)</span> </span>&#123;</div><div class="line">        Call call = NetUtils.getInstance().get(url);</div><div class="line">        call.enqueue(callback);</div><div class="line">        callList.add(call);</div><div class="line">        <span class="keyword">return</span> call;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Call <span class="title">get</span><span class="params">(String url, String tag, Callback callback)</span> </span>&#123;</div><div class="line">        Call call = NetUtils.getInstance().get(url);</div><div class="line">        callList.add(call);</div><div class="line">        <span class="keyword">return</span> call;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Call <span class="title">post</span><span class="params">(String url, String postStr, Callback callback)</span> </span>&#123;</div><div class="line">        FormBody.Builder builder = <span class="keyword">new</span> FormBody.Builder();</div><div class="line">        String[] maps = postStr.split(<span class="string">"&amp;"</span>);</div><div class="line">        <span class="keyword">for</span> (String s : maps) &#123;</div><div class="line">            String key = s.substring(<span class="number">0</span>, s.indexOf(<span class="string">"="</span>));</div><div class="line">            String value = s.substring(s.indexOf(<span class="string">"="</span>) + <span class="number">1</span>, s.length());</div><div class="line">            builder.add(key, value);</div><div class="line">        &#125;</div><div class="line">        Call call = NetUtils.getInstance().post(url, builder.build());</div><div class="line">        call.enqueue(callback);</div><div class="line">        callList.add(call);</div><div class="line">        <span class="keyword">return</span> call;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> Call <span class="title">updateFile</span><span class="params">(String url, String postStr, String fileKey, File file, Callback callback)</span> </span>&#123;</div><div class="line">        HashMap&lt;String, RequestBody&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        String[] maps = postStr.split(<span class="string">"&amp;"</span>);</div><div class="line">        <span class="keyword">for</span> (String s : maps) &#123;</div><div class="line">            String key = s.substring(<span class="number">0</span>, s.indexOf(<span class="string">"="</span>));</div><div class="line">            String value = s.substring(s.indexOf(<span class="string">"="</span>) + <span class="number">1</span>, s.length());</div><div class="line">            RequestBody body = RequestBody.create(MediaType.parse(<span class="string">"text/plain"</span>), value);</div><div class="line">            map.put(key, body);</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        RequestBody requestFile =</div><div class="line">                RequestBody.create(MediaType.parse(<span class="string">"multipart/form-data"</span>), file);</div><div class="line">        MultipartBody.Part body =</div><div class="line">                MultipartBody.Part.createFormData(fileKey, file.getName(), requestFile);</div><div class="line"></div><div class="line">        Call call = NetUtils.getInstance().updateFile(url, body, map);</div><div class="line">        call.enqueue(callback);</div><div class="line">        callList.add(call);</div><div class="line">        <span class="keyword">return</span> call;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (Call call : callList) &#123;</div><div class="line">            call.cancel();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeCall</span><span class="params">(Call call)</span> </span>&#123;</div><div class="line">        callList.remove(call);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其实上面的NetUtils已经满足了我们的网络请求，为什么还要把它包装到NetLoader里面呢？原因是为了我们<br>我们可以通过在每个Activity或者Fragment里面新建一个netLoader示例，在destroy方法里面调用netloader. destroy()方法，就可以实现与之周期进行绑定，防止异常。</p>
<h1 id="CallBack的封装"><a href="#CallBack的封装" class="headerlink" title="CallBack的封装"></a>CallBack的封装</h1><p>我们还可以对请求返回的callback就行同意的处理：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NetCallBack</span> <span class="keyword">implements</span> <span class="title">Callback</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> WeakReference&lt;Context&gt; reference;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NetCallBack</span><span class="params">(Context context)</span></span>&#123;</div><div class="line">        reference=<span class="keyword">new</span> WeakReference&lt;Context&gt;(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(response.body()==<span class="keyword">null</span>)&#123;</div><div class="line">            Toast.makeText(reference.get(), <span class="string">"返回为空"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="comment">//TODO 其他的一些判断,如登陆或者其他的统一操作</span></div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, Throwable t)</span> </span>&#123;</div><div class="line">        Toast.makeText(reference.get(), <span class="string">"网络连接错误"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当网络请求失败的时候，我们可以统一的弹窗处理，当用户没登录时，我们可以自己跳到登录页……</p>
<p><em>以上就是我对网络请求的简单封装，欢迎大家向我吐槽！</em></p>
]]></content>
      
        <categories>
            
            <category> Retrofit </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Retrofit </tag>
            
            <tag> 封装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MarkDown的基本用法]]></title>
      <url>/Blog/2017/03/16/MarkDown/</url>
      <content type="html"><![CDATA[<p>  最近准备弄个自己的博客，记录整理一下自己的学习过程。MarkDown作为一种标记语言，简单易上手，而且比较流行的博客都对MarkDown有很好的支持，所以记录一下MarkDown的简单用户，方便在以后的学习中，能刚快的上手。</p>
<h1 id="设置头部"><a href="#设置头部" class="headerlink" title="设置头部"></a>设置头部</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Header 1</span></div><div class="line"><span class="comment">## Header 2</span></div><div class="line"><span class="comment">### Header 3</span></div><div class="line"><span class="comment">#### Header 4</span></div><div class="line"><span class="comment">##### Header 5</span></div><div class="line"><span class="comment">###### Header 6</span></div></pre></td></tr></table></figure>
<font color="#ff0000" size="3">效果</font>

<h2 id="Header-2"><a href="#Header-2" class="headerlink" title="Header 2"></a>Header 2</h2><h3 id="Header-3"><a href="#Header-3" class="headerlink" title="Header 3"></a>Header 3</h3><h4 id="Header-4"><a href="#Header-4" class="headerlink" title="Header 4"></a>Header 4</h4><h5 id="Header-5"><a href="#Header-5" class="headerlink" title="Header 5"></a>Header 5</h5><h6 id="Header-6"><a href="#Header-6" class="headerlink" title="Header 6"></a>Header 6</h6><h1 id="无序列表（注意缩进）"><a href="#无序列表（注意缩进）" class="headerlink" title="无序列表（注意缩进）"></a>无序列表（<font color="#ff0000" size="3">注意缩进</font>）</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">*  第一列</div><div class="line"> * 第二列</div><div class="line"> * 第三列</div><div class="line">  * 第四列</div></pre></td></tr></table></figure>
<font color="#ff0000" size="3">效果</font>

<ul>
<li>第一列</li>
<li>第二列</li>
<li>第三列<ul>
<li>第四列</li>
</ul>
</li>
</ul>
<h1 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 第一列</div><div class="line">2. 第二列</div><div class="line">3. 第三列</div></pre></td></tr></table></figure>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a><font color="#ff0000" size="3">效果</font></h3><ol>
<li>第一列</li>
<li>第二列</li>
<li>第三列</li>
<li>第四列</li>
</ol>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 第一列</div><div class="line">&gt; 第二列</div><div class="line">&gt; 第三列</div></pre></td></tr></table></figure>
<h3 id="引用效果"><a href="#引用效果" class="headerlink" title="引用效果"></a><font color="#ff0000" size="3">引用效果</font></h3><blockquote>
<p>第一列<br>第二列<br>第三列    </p>
</blockquote>
<h1 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- 列表1</div><div class="line">	+ 列表2</div><div class="line">	+ 列表3</div><div class="line">		+ 列表8</div><div class="line">- 列表4</div><div class="line">	+  列表5</div><div class="line">	+  列表6</div></pre></td></tr></table></figure>
<h3 id="嵌套列表效果"><a href="#嵌套列表效果" class="headerlink" title="嵌套列表效果"></a><font color="#ff0000" size="3">嵌套列表效果</font></h3><ul>
<li>列表1<ul>
<li>列表2</li>
<li>列表3<ul>
<li>列表8</li>
</ul>
</li>
</ul>
</li>
<li>列表4<ul>
<li>列表5</li>
<li>列表6</li>
</ul>
</li>
</ul>
<h1 id="文字链接"><a href="#文字链接" class="headerlink" title="文字链接"></a>文字链接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[百度一下](https://www.baidu.com &quot;百度一下&quot;)</div></pre></td></tr></table></figure>
<h3 id="文字链接效果"><a href="#文字链接效果" class="headerlink" title="文字链接效果"></a><font color="#ff0000" size="3">文字链接效果</font></h3><p><a href="https://www.baidu.com" title="百度一下" target="_blank" rel="external">百度一下</a></p>
<blockquote>
<p>前面的百度一下表示展示文字<br>后面的百度一下指当鼠标在文字上面的时候显示的内容 </p>
</blockquote>
<h1 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![测试](http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png &quot;GitHub Mark&quot;)</div></pre></td></tr></table></figure>
<h3 id="图片链接效果"><a href="#图片链接效果" class="headerlink" title="图片链接效果"></a><font color="#ff0000" size="3">图片链接效果</font></h3><p><img src="http://github.global.ssl.fastly.net/images/modules/logos_page/GitHub-Mark.png" alt="测试" title="GitHub Mark"></p>
<blockquote>
<p>前面的测试指图片的名称<br>后面的github mark指鼠标放在图片上展示的内容</p>
</blockquote>
<h1 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;854350705@qq.com&gt;</div><div class="line">&lt;https:www.baidu.com&gt;</div></pre></td></tr></table></figure>
<h3 id="自动链接效果"><a href="#自动链接效果" class="headerlink" title="自动链接效果"></a><font color="#ff0000" size="3">自动链接效果</font></h3><p><a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#x38;&#x35;&#52;&#51;&#x35;&#x30;&#55;&#48;&#53;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;">&#x38;&#x35;&#52;&#51;&#x35;&#x30;&#55;&#48;&#53;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#109;</a>    </p>
<https:www.baidu.com>


<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">用``` ```包裹</div><div class="line">或者每行文字4个空格或者1个TAB</div></pre></td></tr></table></figure>
<h3 id="代码效果"><a href="#代码效果" class="headerlink" title="代码效果"></a><font color="#ff0000" size="3">代码效果</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">String a=<span class="string">"a"</span>;</div><div class="line">String b = <span class="string">"b"</span>;</div><div class="line">priintln(a+b);</div></pre></td></tr></table></figure>
<pre><code>String a=&quot;a&quot;;
String a=&quot;a&quot;;
String a=&quot;a&quot;;
</code></pre><p>#注释</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 注释 --&gt;</div></pre></td></tr></table></figure>
<!-- 注释 -->
<h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">\\ 反斜杠</div><div class="line">\` 反引号</div><div class="line">\* 星号</div><div class="line">\_ 下划线</div><div class="line">\&#123;\&#125; 大括号</div><div class="line">\[\] 中括号</div><div class="line">\(\) 小括号</div><div class="line">\# 井号</div><div class="line">\+ 加号</div><div class="line">\- 减号</div><div class="line">\. 英文句号</div><div class="line">\! 感叹号</div></pre></td></tr></table></figure>
<h3 id="转义效果（每个字符前添加-）"><a href="#转义效果（每个字符前添加-）" class="headerlink" title="转义效果（每个字符前添加\）"></a><font color="#ff0000" size="3">转义效果（每个字符前添加\）</font></h3><p>\ 反斜杠</p>
<p>` 反引号</p>
<p>* 星号</p>
<p>_ 下划线</p>
<p>{} 大括号</p>
<p>[] 中括号</p>
<p>() 小括号</p>
<p># 井号</p>
<p>+ 加号</p>
<p>- 减号</p>
<p>. 英文句号</p>
<p>! 感叹号</p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| 列1        | 列2           |列3 |</div><div class="line">| ------------- |:-------------:| -----:|</div><div class="line">| col 3 is      | right-aligned | $1600 |</div><div class="line">| col 2 is      | centered      |   $12 |</div><div class="line">| zebra stripes | are neat      |    $1 |</div></pre></td></tr></table></figure>
<h3 id="表格效果"><a href="#表格效果" class="headerlink" title="表格效果"></a><font color="#ff0000" size="3">表格效果</font></h3><table>
<thead>
<tr>
<th>列1</th>
<th style="text-align:center">列2</th>
<th style="text-align:right">列3</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<h1 id="设置字体大小颜色"><a href="#设置字体大小颜色" class="headerlink" title="设置字体大小颜色"></a>设置字体大小颜色</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">### &lt;font color=#ff0000 face=&quot;微软雅黑&quot; size=12&gt; 表格效果&lt;/font&gt;</div></pre></td></tr></table></figure>
<h3 id="设置字体大小颜色效果"><a href="#设置字体大小颜色效果" class="headerlink" title=" 设置字体大小颜色效果"></a><font color="#ff0000" face="微软雅黑" size="3"> 设置字体大小颜色效果</font></h3><h1 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">快捷键 `Ctrl + D` 来收藏本页</div></pre></td></tr></table></figure>
<h3 id="行内标签效果"><a href="#行内标签效果" class="headerlink" title=" 行内标签效果"></a><font color="#ff0000" size="3"> 行内标签效果</font></h3><p>快捷键 <code>Ctrl + D</code> 来收藏本页</p>
<p>#html标签</p>
<table><br>    <tr><br>        <th rowspan="2">值班人员</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table>



<p>#参考式链接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">我经常去的几个网站[Google][1]、[Leanote][2]以及[自己的博客][3]</div><div class="line">[Leanote 笔记][2]是一个不错的[网站][]。</div><div class="line">[1]:http://www.google.com &quot;Google&quot;</div><div class="line">[2]:http://www.leanote.com &quot;Leanote&quot;</div><div class="line">[3]:http://http://blog.leanote.com/freewalk &quot;梵居闹市&quot;</div><div class="line">[网站]:http://http://blog.leanote.com/freewalk</div></pre></td></tr></table></figure>
<p>我经常去的几个网站<a href="http://www.google.com" title="Google" target="_blank" rel="external">Google</a>、<a href="http://www.leanote.com" title="Leanote" target="_blank" rel="external">Leanote</a>以及<a href="http://http://blog.leanote.com/freewalk" title="梵居闹市" target="_blank" rel="external">自己的博客</a><br><a href="http://www.leanote.com" title="Leanote" target="_blank" rel="external">Leanote 笔记</a>是一个不错的<a href="http://http://blog.leanote.com/freewalk" target="_blank" rel="external">网站</a>。</p>
<p>#包含段落的列表</p>
<blockquote>
<p>必须缩进4个空格或者1个TAB</p>
</blockquote>
<p><span id="jump">跳转到这里：</span></p>
<p><a href="#jump">说明文字</a></p>
<h1 id="文字加粗"><a href="#文字加粗" class="headerlink" title="文字加粗"></a>文字加粗</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">**加粗内容**</div></pre></td></tr></table></figure>
<p> <strong>加粗内容</strong></p>
<h1 id="文字斜体"><a href="#文字斜体" class="headerlink" title="文字斜体"></a>文字斜体</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">_斜体_</div></pre></td></tr></table></figure>
<p> <em>斜体</em></p>
</https:www.baidu.com>]]></content>
      
        <categories>
            
            <category> 实用工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo使用]]></title>
      <url>/Blog/2017/03/15/hexo/</url>
      <content type="html"><![CDATA[<ol>
<li>安装hexo<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div><div class="line">``` </div><div class="line">2. 初始化hexo</div></pre></td></tr></table></figure>
</li>
</ol>
<p>$ hexo init <folder><br>$ cd <folder><br>$ npm install<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">目录结构如下</div></pre></td></tr></table></figure></folder></folder></p>
<p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br> |   ├── _drafts<br> |   └── _posts<br>└── themes<br>```  </p>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/Blog/2017/03/15/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Android常用工具类]]></title>
      <url>/Blog/2017/03/14/AndroidUtils/</url>
      <content type="html"><![CDATA[<p>##获取资源</p>
<p>###根据id获取资源<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getResources().getDrawable(id); <span class="comment">//通过资源id获取drawable</span></div></pre></td></tr></table></figure></p>
<p>###根据名称和类别获取资源<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getResources().getIdentifier(<span class="string">"ic_launcher"</span>, <span class="string">"drawable"</span>, getPackageName())</div></pre></td></tr></table></figure></p>
<p>###String判空<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TextUtils.isEmpty(CharSequence str)</div></pre></td></tr></table></figure></p>
<p>###富文本显示<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Html.fromHtml()</div></pre></td></tr></table></figure></p>
<p>输入一段html,就可以实现比较复杂的富文本展示</p>
<p>###view 自动点击<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">view.performClick()</div></pre></td></tr></table></figure></p>
<p>###设置ScrollView是否填满屏幕</p>
<pre><code class="java">android:fillViewport
</code></pre>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 工具 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UML使用]]></title>
      <url>/Blog/2016/12/07/UML/</url>
      <content type="html"><![CDATA[<blockquote>
<p>UML（Unified Modeling Language）中文统一建模语言，是一种开放的方法，用于说明、可视化、构建和编写一个正在开发的、面向对象的、软件密集系统的制品的开放方法。UML展现了一系列最佳工程实践，这些最佳实践在对大规模，复杂系统进行建模方面，特别是在软件架构层次已经被验证有效。 【维基百科】</p>
</blockquote>
<p>最近做的项目，感觉项目越来越大，其中的关系也变得越来越复杂，急需理清其中的相关联系，所以就整理一下UML使用技巧，希望自己通过UML，能够理清自己的思路。</p>
<p>##类图作用<br>类图是软件工程的统一建模语言一种静态结构图，该图描述了系统的类集合，类的属性和类之间的关系。帮助人们简化对系统的理解，它是系统分析和设计阶段的重要产物，也是系统编码和测试的重要模型依据。学习好类图的绘制，是一位合格的软件工程师应有的技能。</p>
<p>##类图的示例<br>类主要包括类名、属性和方法以及方法所需的参数，用类图简单的表示如下图所示：<br><img src="https://dn-myg6wstv.qbox.me/583a2a5821869b32a480" alt="Alt Image Text" title="图1"><br>Java中，可见性分为三类：private、public、protexted,分别用-，+和#来表示。</p>
<p>###类名<br>对于Java中的类名，如果是抽象类的haunted，在类名的右下角会有一个（Abstarct）表示。</p>
<p>###属性<br>属性的一般表示格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">可见性  名称:类型 [ = 默认值 ]</div></pre></td></tr></table></figure></p>
<p>如：+ name:String =zhoujunpeng</p>
<p>###方法<br>方法的表示格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">可见性  名称(参数列表) [ : 返回类型]</div></pre></td></tr></table></figure></p>
<p>如：</p>
<blockquote>
<ul>
<li><ul>
<li>setName(String name) : void</li>
</ul>
</li>
<li><ul>
<li>getName() :String;</li>
</ul>
</li>
</ul>
</blockquote>
<p>##类与之间的关系</p>
<p>###泛化(Generalization)关系<br>泛化关系是指java中的继承，类和类，接口和接口之间的继承关系，一般用实线和带空心的三角形表示，如下图：<br><img src="https://dn-myg6wstv.qbox.me/9e4b61c4ea01063fd435" alt="泛化关系"></p>
<p>###实现（Realization)关系<br>实现关系是指类与接口之间的关系，一般用虚线和带空心的三角形表示，如下图：<br><img src="https://dn-myg6wstv.qbox.me/1acef76e05fa49640207" alt="泛化关系"></p>
<p>###依赖(Dependence)关系<br>依赖关系可以理解为一个类使用了另外一个类，一般用带箭头的虚线表示，如图：</p>
<p><img src="https://dn-myg6wstv.qbox.me/7f1190bf98428711c3b3" alt="泛化关系"></p>
<p>###关联（Association）关系<br>关联是指一个类和另外一个类有联系，一般用带箭头的实线表示，箭头指向被包含的类，如图：<br><img src="https://dn-myg6wstv.qbox.me/1a67696c06b815f47f29" alt="泛化关系"></p>
<p>线上的标志表示：<br>&gt;</p>
<ul>
<li>1..1 表示另一个类的一个对象只与该类的一个对象有关系</li>
<li>0..* 表示另一个类的一个对象与该类的零个或多个对象有关系</li>
<li>1..* 表示另一个类的一个对象与该类的一个或多个对象有关系</li>
<li>0..1 表示另一个类的一个对象没有或只与该类的一个对象有关系</li>
<li>任意多个对象关联</li>
</ul>
<p>###聚合(Aggregation)关系<br>聚合表示整体与部分的关系，而且部分可以脱离整体二存在，一般用带空心菱形的直线表示，如图：<br><img src="https://dn-myg6wstv.qbox.me/f513265ce32b0dfc9d80" alt="泛化关系"></p>
<p>###组合(Composition)关系<br>组合关系也是一种部分和整体的关系，但是部分存活周期受到整体的影响，若整体不存在则部分也将不存在。此时部分需在整体的构造方法中创建。在UML类中，组合关系用带实心菱形的直线表示。<br><img src="https://dn-myg6wstv.qbox.me/e2316ce0dd180db8fe8d" alt="泛化关系"></p>
<p>##最后看下完整的类图展示<br><img src="https://dn-myg6wstv.qbox.me/143f47fc3ae1e1acd759" alt="泛化关系"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[RxJava2操作符用法示例]]></title>
      <url>/Blog/2016/12/07/RxJava2%20example/</url>
      <content type="html"><![CDATA[<p>#RxJava2<br><em>SimpleExample</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">Observable.just(&quot;Cricket&quot;, &quot;Football&quot;)..subscribeOn(Schedulers.io())</div><div class="line">                // Be notified on the main thread</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(new Observer&lt;String&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(String value) &#123;</div><div class="line">                textView.append(&quot; onNext : value : &quot; + value);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onNext : value : &quot; + value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<p>逐行打印出数据<strong><em>**</em></strong></p>
<p>map操作<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">    * Here we are getting ApiUser Object from api server</div><div class="line">    * then we are converting it into User Object because</div><div class="line">    * may be our database support User Not ApiUser Object</div><div class="line">    * Here we are using Map Operator to do that</div><div class="line">    */</div><div class="line"> /*</div><div class="line">    * Here we are getting ApiUser Object from api server</div><div class="line">    * then we are converting it into User Object because</div><div class="line">    * may be our database support User Not ApiUser Object</div><div class="line">    * Here we are using Map Operator to do that</div><div class="line">    */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line">        getObservable()</div><div class="line">                // Run on a background thread</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                // Be notified on the main thread</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .map(new Function&lt;List&lt;ApiUser&gt;, List&lt;User&gt;&gt;() &#123;</div><div class="line"></div><div class="line">                    @Override</div><div class="line">                    public List&lt;User&gt; apply(List&lt;ApiUser&gt; apiUsers) throws Exception &#123;</div><div class="line">                        return Utils.convertApiUserListToUserList(apiUsers);</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                .subscribe(getObserver());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observable&lt;List&lt;ApiUser&gt;&gt; getObservable() &#123;</div><div class="line">        return Observable.create(new ObservableOnSubscribe&lt;List&lt;ApiUser&gt;&gt;() &#123;</div><div class="line">            @Override</div><div class="line">            public void subscribe(ObservableEmitter&lt;List&lt;ApiUser&gt;&gt; e) throws Exception &#123;</div><div class="line">                if (!e.isDisposed()) &#123;</div><div class="line">                    e.onNext(Utils.getApiUserList());</div><div class="line">                    e.onComplete();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observer&lt;List&lt;User&gt;&gt; getObserver() &#123;</div><div class="line">        return new Observer&lt;List&lt;User&gt;&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(List&lt;User&gt; userList) &#123;</div><div class="line">                textView.append(&quot; onNext&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                for (User user : userList) &#123;</div><div class="line">                    textView.append(&quot; firstName : &quot; + user.firstName);</div><div class="line">                    textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                &#125;</div><div class="line">                Log.d(TAG, &quot; onNext : &quot; + userList.size());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>zip<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">    * Here we are getting two user list</div><div class="line">    * One, the list of cricket fans</div><div class="line">    * Another one, the list of football fans</div><div class="line">    * Then we are finding the list of users who loves both</div><div class="line">    */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line">        Observable.zip(getCricketFansObservable(), getFootballFansObservable(),</div><div class="line">                new BiFunction&lt;List&lt;User&gt;, List&lt;User&gt;, List&lt;User&gt;&gt;() &#123;</div><div class="line">                    @Override</div><div class="line">                    public List&lt;User&gt; apply(List&lt;User&gt; cricketFans, List&lt;User&gt; footballFans) throws Exception &#123;</div><div class="line">                        return Utils.filterUserWhoLovesBoth(cricketFans, footballFans);</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                // Run on a background thread</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                // Be notified on the main thread</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(getObserver());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observable&lt;List&lt;User&gt;&gt; getCricketFansObservable() &#123;</div><div class="line">        return Observable.create(new ObservableOnSubscribe&lt;List&lt;User&gt;&gt;() &#123;</div><div class="line">            @Override</div><div class="line">            public void subscribe(ObservableEmitter&lt;List&lt;User&gt;&gt; e) throws Exception &#123;</div><div class="line">                if (!e.isDisposed()) &#123;</div><div class="line">                    e.onNext(Utils.getUserListWhoLovesCricket());</div><div class="line">                    e.onComplete();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observable&lt;List&lt;User&gt;&gt; getFootballFansObservable() &#123;</div><div class="line">        return Observable.create(new ObservableOnSubscribe&lt;List&lt;User&gt;&gt;() &#123;</div><div class="line">            @Override</div><div class="line">            public void subscribe(ObservableEmitter&lt;List&lt;User&gt;&gt; e) throws Exception &#123;</div><div class="line">                if (!e.isDisposed()) &#123;</div><div class="line">                    e.onNext(Utils.getUserListWhoLovesFootball());</div><div class="line">                    e.onComplete();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observer&lt;List&lt;User&gt;&gt; getObserver() &#123;</div><div class="line">        return new Observer&lt;List&lt;User&gt;&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(List&lt;User&gt; userList) &#123;</div><div class="line">                textView.append(&quot; onNext&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                for (User user : userList) &#123;</div><div class="line">                    textView.append(&quot; firstName : &quot; + user.firstName);</div><div class="line">                    textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                &#125;</div><div class="line">                Log.d(TAG, &quot; onNext : &quot; + userList.size());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>Disposable<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">   protected void onDestroy() &#123;</div><div class="line">       super.onDestroy();</div><div class="line">       disposables.clear(); // do not send event after activity has been destroyed</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   /*</div><div class="line">    * Example to understand how to use disposables.</div><div class="line">    * disposables is cleared in onDestroy of this activity.</div><div class="line">    */</div><div class="line">   void doSomeWork() &#123;</div><div class="line">       disposables.add(sampleObservable()</div><div class="line">               // Run on a background thread</div><div class="line">               .subscribeOn(Schedulers.io())</div><div class="line">               // Be notified on the main thread</div><div class="line">               .observeOn(AndroidSchedulers.mainThread())</div><div class="line">               .subscribeWith(new DisposableObserver&lt;String&gt;() &#123;</div><div class="line">                   @Override</div><div class="line">                   public void onComplete() &#123;</div><div class="line">                       textView.append(&quot; onComplete&quot;);</div><div class="line">                       textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                       Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">                   &#125;</div><div class="line"></div><div class="line">                   @Override</div><div class="line">                   public void onError(Throwable e) &#123;</div><div class="line">                       textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                       textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                       Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">                   &#125;</div><div class="line"></div><div class="line">                   @Override</div><div class="line">                   public void onNext(String value) &#123;</div><div class="line">                       textView.append(&quot; onNext : value : &quot; + value);</div><div class="line">                       textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                       Log.d(TAG, &quot; onNext value : &quot; + value);</div><div class="line">                   &#125;</div><div class="line">               &#125;));</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   static Observable&lt;String&gt; sampleObservable() &#123;</div><div class="line">       return Observable.defer(new Callable&lt;ObservableSource&lt;? extends String&gt;&gt;() &#123;</div><div class="line">           @Override</div><div class="line">           public ObservableSource&lt;? extends String&gt; call() throws Exception &#123;</div><div class="line">               // Do some long running operation</div><div class="line">               SystemClock.sleep(2000);</div><div class="line">               return Observable.just(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;);</div><div class="line">           &#125;</div><div class="line">       &#125;);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>take<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">/* Using take operator, it only emits</div><div class="line">    * required number of values. here only 3 out of 5</div><div class="line">    */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line">        getObservable()</div><div class="line">                // Run on a background thread</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                // Be notified on the main thread</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .take(3)</div><div class="line">                .subscribe(getObserver());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observable&lt;Integer&gt; getObservable() &#123;</div><div class="line">        return Observable.just(1, 2, 3, 4, 5);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observer&lt;Integer&gt; getObserver() &#123;</div><div class="line">        return new Observer&lt;Integer&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(Integer value) &#123;</div><div class="line">                textView.append(&quot; onNext : value : &quot; + value);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onNext value : &quot; + value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>Timer<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">    * simple example using timer to do something after 2 second</div><div class="line">    */</div><div class="line">   private void doSomeWork() &#123;</div><div class="line">       getObservable()</div><div class="line">               // Run on a background thread</div><div class="line">               .subscribeOn(Schedulers.io())</div><div class="line">               // Be notified on the main thread</div><div class="line">               .observeOn(AndroidSchedulers.mainThread())</div><div class="line">               .subscribe(getObserver());</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   private Observable&lt;? extends Long&gt; getObservable() &#123;</div><div class="line">       return Observable.timer(2, TimeUnit.SECONDS);</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   private Observer&lt;Long&gt; getObserver() &#123;</div><div class="line">       return new Observer&lt;Long&gt;() &#123;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onSubscribe(Disposable d) &#123;</div><div class="line">               Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onNext(Long value) &#123;</div><div class="line">               textView.append(&quot; onNext : value : &quot; + value);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onNext : value : &quot; + value);</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onError(Throwable e) &#123;</div><div class="line">               textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onComplete() &#123;</div><div class="line">               textView.append(&quot; onComplete&quot;);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">           &#125;</div><div class="line">       &#125;;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>Interval<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">    protected void onDestroy() &#123;</div><div class="line">        super.onDestroy();</div><div class="line">        disposables.clear(); // clearing it : do not emit after destroy</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /*</div><div class="line">     * simple example using interval to run task at an interval of 2 sec</div><div class="line">     * which start immediately</div><div class="line">     */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line">        disposables.add(getObservable()</div><div class="line">                // Run on a background thread</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                // Be notified on the main thread</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribeWith(getObserver()));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observable&lt;? extends Long&gt; getObservable() &#123;</div><div class="line">        return Observable.interval(0, 2, TimeUnit.SECONDS);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private DisposableObserver&lt;Long&gt; getObserver() &#123;</div><div class="line">        return new DisposableObserver&lt;Long&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(Long value) &#123;</div><div class="line">                textView.append(&quot; onNext : value : &quot; + value);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onNext : value : &quot; + value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>SingleObserver<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">    * simple example using SingleObserver</div><div class="line">    */</div><div class="line">   private void doSomeWork() &#123;</div><div class="line">       Single.just(&quot;Amit&quot;)</div><div class="line">               .subscribe(getSingleObserver());</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   private SingleObserver&lt;String&gt; getSingleObserver() &#123;</div><div class="line">       return new SingleObserver&lt;String&gt;() &#123;</div><div class="line">           @Override</div><div class="line">           public void onSubscribe(Disposable d) &#123;</div><div class="line">               Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onSuccess(String value) &#123;</div><div class="line">               textView.append(&quot; onNext : value : &quot; + value);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onNext value : &quot; + value);</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onError(Throwable e) &#123;</div><div class="line">               textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">           &#125;</div><div class="line">       &#125;;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>CompletableObserver<em>**</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">     * simple example using CompletableObserver</div><div class="line">     */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line">        Completable completable = Completable.timer(1000, TimeUnit.MILLISECONDS);</div><div class="line"></div><div class="line">        completable</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                // Be notified on the main thread</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .subscribe(getCompletableObserver());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private CompletableObserver getCompletableObserver() &#123;</div><div class="line">        return new CompletableObserver() &#123;</div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">    * simple example using Flowable</div><div class="line">    */</div><div class="line">   private void doSomeWork() &#123;</div><div class="line"></div><div class="line">       Flowable&lt;Integer&gt; observable = Flowable.just(1, 2, 3, 4);</div><div class="line"></div><div class="line">       observable.reduce(50, new BiFunction&lt;Integer, Integer, Integer&gt;() &#123;</div><div class="line">           @Override</div><div class="line">           public Integer apply(Integer t1, Integer t2) &#123;</div><div class="line">               return t1 + t2;</div><div class="line">           &#125;</div><div class="line">       &#125;).subscribe(getObserver());</div><div class="line"></div><div class="line">   &#125;</div><div class="line"></div><div class="line">   private SingleObserver&lt;Integer&gt; getObserver() &#123;</div><div class="line"></div><div class="line">       return new SingleObserver&lt;Integer&gt;() &#123;</div><div class="line">           @Override</div><div class="line">           public void onSubscribe(Disposable d) &#123;</div><div class="line">               Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onSuccess(Integer value) &#123;</div><div class="line">               textView.append(&quot; onSuccess : value : &quot; + value);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onSuccess : value : &quot; + value);</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onError(Throwable e) &#123;</div><div class="line">               textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">           &#125;</div><div class="line">       &#125;;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">     * simple example using reduce to add all the number</div><div class="line">     */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line">        getObservable()</div><div class="line">                .reduce(new BiFunction&lt;Integer, Integer, Integer&gt;() &#123;</div><div class="line">                    @Override</div><div class="line">                    public Integer apply(Integer t1, Integer t2) &#123;</div><div class="line">                        return t1 + t2;</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                .subscribe(getObserver());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observable&lt;Integer&gt; getObservable() &#123;</div><div class="line">        return Observable.just(1, 2, 3, 4);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private MaybeObserver&lt;Integer&gt; getObserver() &#123;</div><div class="line">        return new MaybeObserver&lt;Integer&gt;() &#123;</div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSuccess(Integer value) &#123;</div><div class="line">                textView.append(&quot; onSuccess : value : &quot; + value);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onSuccess : value : &quot; + value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">     * simple example using buffer operator - bundles all emitted values into a list</div><div class="line">     */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line"></div><div class="line">        Observable&lt;List&lt;String&gt;&gt; buffered = getObservable().buffer(3, 1);</div><div class="line"></div><div class="line">        // 3 means,  it takes max of three from its start index and create list</div><div class="line">        // 1 means, it jumps one step every time</div><div class="line">        // so the it gives the following list</div><div class="line">        // 1 - one, two, three</div><div class="line">        // 2 - two, three, four</div><div class="line">        // 3 - three, four, five</div><div class="line">        // 4 - four, five</div><div class="line">        // 5 - five</div><div class="line"></div><div class="line">        buffered.subscribe(getObserver());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observable&lt;String&gt; getObservable() &#123;</div><div class="line">        return Observable.just(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observer&lt;List&lt;String&gt;&gt; getObserver() &#123;</div><div class="line">        return new Observer&lt;List&lt;String&gt;&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(List&lt;String&gt; stringList) &#123;</div><div class="line">                textView.append(&quot; onNext size : &quot; + stringList.size());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onNext : size :&quot; + stringList.size());</div><div class="line">                for (String value : stringList) &#123;</div><div class="line">                    textView.append(&quot; value : &quot; + value);</div><div class="line">                    textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                    Log.d(TAG, &quot; : value :&quot; + value);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">    * simple example by using filter operator to emit only even value</div><div class="line">    *</div><div class="line">    */</div><div class="line">   private void doSomeWork() &#123;</div><div class="line">       Observable.just(1, 2, 3, 4, 5, 6)</div><div class="line">               .filter(new Predicate&lt;Integer&gt;() &#123;</div><div class="line">                   @Override</div><div class="line">                   public boolean test(Integer integer) throws Exception &#123;</div><div class="line">                       return integer % 2 == 0;</div><div class="line">                   &#125;</div><div class="line">               &#125;)</div><div class="line">               .subscribe(getObserver());</div><div class="line">   &#125;</div><div class="line"></div><div class="line"></div><div class="line">   private Observer&lt;Integer&gt; getObserver() &#123;</div><div class="line">       return new Observer&lt;Integer&gt;() &#123;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onSubscribe(Disposable d) &#123;</div><div class="line">               Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onNext(Integer value) &#123;</div><div class="line">               textView.append(&quot; onNext : &quot;);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               textView.append(&quot; value : &quot; + value);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onNext &quot;);</div><div class="line">               Log.d(TAG, &quot; value : &quot; + value);</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onError(Throwable e) &#123;</div><div class="line">               textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onComplete() &#123;</div><div class="line">               textView.append(&quot; onComplete&quot;);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">           &#125;</div><div class="line">       &#125;;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line">/* Using replay operator, replay ensure that all observers see the same sequence</div><div class="line">     * of emitted items, even if they subscribe after the Observable has begun emitting items</div><div class="line">     */</div><div class="line">    private void doSomeWork() &#123;</div><div class="line"></div><div class="line">        PublishSubject&lt;Integer&gt; source = PublishSubject.create();</div><div class="line">        ConnectableObservable&lt;Integer&gt; connectableObservable = source.replay(3); // bufferSize = 3 to retain 3 values to replay</div><div class="line">        connectableObservable.connect(); // connecting the connectableObservable</div><div class="line"></div><div class="line">        connectableObservable.subscribe(getFirstObserver());</div><div class="line"></div><div class="line">        source.onNext(1);</div><div class="line">        source.onNext(2);</div><div class="line">        source.onNext(3);</div><div class="line">        source.onNext(4);</div><div class="line">        source.onComplete();</div><div class="line"></div><div class="line">        /*</div><div class="line">         * it will emit 2, 3, 4 as (count = 3), retains the 3 values for replay</div><div class="line">         */</div><div class="line">        connectableObservable.subscribe(getSecondObserver());</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    private Observer&lt;Integer&gt; getFirstObserver() &#123;</div><div class="line">        return new Observer&lt;Integer&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                Log.d(TAG, &quot; First onSubscribe : &quot; + d.isDisposed());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(Integer value) &#123;</div><div class="line">                textView.append(&quot; First onNext : value : &quot; + value);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; First onNext value : &quot; + value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; First onError : &quot; + e.getMessage());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; First onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; First onComplete&quot;);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; First onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private Observer&lt;Integer&gt; getSecondObserver() &#123;</div><div class="line">        return new Observer&lt;Integer&gt;() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onSubscribe(Disposable d) &#123;</div><div class="line">                textView.append(&quot; Second onSubscribe : isDisposed :&quot; + d.isDisposed());</div><div class="line">                Log.d(TAG, &quot; Second onSubscribe : &quot; + d.isDisposed());</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onNext(Integer value) &#123;</div><div class="line">                textView.append(&quot; Second onNext : value : &quot; + value);</div><div class="line">                textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">                Log.d(TAG, &quot; Second onNext value : &quot; + value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(Throwable e) &#123;</div><div class="line">                textView.append(&quot; Second onError : &quot; + e.getMessage());</div><div class="line">                Log.d(TAG, &quot; Second onError : &quot; + e.getMessage());</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onComplete() &#123;</div><div class="line">                textView.append(&quot; Second onComplete&quot;);</div><div class="line">                Log.d(TAG, &quot; Second onComplete&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">    * Using concat operator to combine Observable : concat maintain</div><div class="line">    * the order of Observable.</div><div class="line">    * It will emit all the 7 values in order</div><div class="line">    * here - first &quot;A1&quot;, &quot;A2&quot;, &quot;A3&quot;, &quot;A4&quot; and then &quot;B1&quot;, &quot;B2&quot;, &quot;B3&quot;</div><div class="line">    * first all from the first Observable and then</div><div class="line">    * all from the second Observable all in order</div><div class="line">    */</div><div class="line">   private void doSomeWork() &#123;</div><div class="line">       final String[] aStrings = &#123;&quot;A1&quot;, &quot;A2&quot;, &quot;A3&quot;, &quot;A4&quot;&#125;;</div><div class="line">       final String[] bStrings = &#123;&quot;B1&quot;, &quot;B2&quot;, &quot;B3&quot;&#125;;</div><div class="line"></div><div class="line">       final Observable&lt;String&gt; aObservable = Observable.fromArray(aStrings);</div><div class="line">       final Observable&lt;String&gt; bObservable = Observable.fromArray(bStrings);</div><div class="line"></div><div class="line">       Observable.concat(aObservable, bObservable)</div><div class="line">               .subscribe(getObserver());</div><div class="line">   &#125;</div><div class="line"></div><div class="line"></div><div class="line">   private Observer&lt;String&gt; getObserver() &#123;</div><div class="line">       return new Observer&lt;String&gt;() &#123;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onSubscribe(Disposable d) &#123;</div><div class="line">               Log.d(TAG, &quot; onSubscribe : &quot; + d.isDisposed());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onNext(String value) &#123;</div><div class="line">               textView.append(&quot; onNext : value : &quot; + value);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onNext : value : &quot; + value);</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onError(Throwable e) &#123;</div><div class="line">               textView.append(&quot; onError : &quot; + e.getMessage());</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onError : &quot; + e.getMessage());</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onComplete() &#123;</div><div class="line">               textView.append(&quot; onComplete&quot;);</div><div class="line">               textView.append(AppConstant.LINE_SEPARATOR);</div><div class="line">               Log.d(TAG, &quot; onComplete&quot;);</div><div class="line">           &#125;</div><div class="line">       &#125;;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 实用 </category>
            
            <category> RxJava2 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[swift学习]]></title>
      <url>/Blog/2016/11/16/swift/</url>
      <content type="html"><![CDATA[<p>#字段 dictionary<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var animalGroupsDict = [&quot;whales&quot;:&quot;pod&quot;, &quot;geese&quot;:&quot;flock&quot;, &quot;lions&quot;:&quot;pride&quot;]</div><div class="line"></div><div class="line">var groupsDict = [String:String]()</div></pre></td></tr></table></figure></p>
<p>##常见用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var lifeSpanDict = [&quot;African Grey Parrot&quot;: 50...70, &quot;Tiger Salamander&quot;: 12...15,</div><div class="line">    &quot;Bottlenose Dolphin&quot;: 20...30]</div><div class="line"></div><div class="line">var averageLifeSpanDict = [String:Range&lt;Int&gt;]()</div></pre></td></tr></table></figure></p>
<font color="#ff0000" size="3"> … 运算符代表某个区间 ，如 50… 70就是50到70之间的某个数</font>


<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">//Adding item to a dictionary</span></div><div class="line"></div><div class="line">animalGrounpsDict[<span class="string">"crows"</span>] = <span class="string">"murder"</span></div><div class="line">animalGrounpsDict[<span class="string">"monkeys"</span>] = <span class="string">"troop"</span></div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//the count method is available to all collections, count方法所有的集合都有</div><div class="line">animalGrounpsDict.count</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//Removing items from a dictionary</div><div class="line">animalGroupsDict[&quot;monkeys&quot;] = nil</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//Update a value </div><div class="line">animalGrounpsDict[&quot;monkeys&quot;] = [&quot;barrel&quot;]</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var group = animalGrounpsDict.updateValue[&quot;gaggle&quot;, forkey:&quot;geese&quot;]</div><div class="line">group.dynamicType （结果为 Optional&lt;String&gt;.Type） </div><div class="line">//首先更新gaggle的种类为geese，并返回 geese ,通过group.dynamicType获取group的类型</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//Retrieving the value for a particular key,获取key对应的值</div><div class="line">let groupOfWhales = animalGroupsDict[&quot;whales&quot;] </div><div class="line"></div><div class="line">if letgrounpOfWhales = animalGroupsDict[“whales”]&#123;</div><div class="line">	// 如果whales对应的value存在</div><div class="line">&#125;else&#123;</div><div class="line">	//如果whales对应的value不存在</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> swift </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[浏览器调起app]]></title>
      <url>/Blog/2016/11/16/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B0%83%E8%B5%B7App/</url>
      <content type="html"><![CDATA[<h3 id="现在的h5与Android原生的交互越来越多，为了提升用户的体验，想分享红包或者一些运营活动，都希望能够直接唤起原生的app-并跳转指定的页面。由于Android的浏览器较多，层次不齐，很难适配。下面我介绍的方法，经测试在chrome、uc、魅族自带的浏览器、搜狗浏览器、360浏览器、QQ浏览器、遨游浏览器、火狐浏览器都可适用，甚至可以直接在QQ里面打开，但是在百度浏览器上没有任何反应。"><a href="#现在的h5与Android原生的交互越来越多，为了提升用户的体验，想分享红包或者一些运营活动，都希望能够直接唤起原生的app-并跳转指定的页面。由于Android的浏览器较多，层次不齐，很难适配。下面我介绍的方法，经测试在chrome、uc、魅族自带的浏览器、搜狗浏览器、360浏览器、QQ浏览器、遨游浏览器、火狐浏览器都可适用，甚至可以直接在QQ里面打开，但是在百度浏览器上没有任何反应。" class="headerlink" title="现在的h5与Android原生的交互越来越多，为了提升用户的体验，想分享红包或者一些运营活动，都希望能够直接唤起原生的app,并跳转指定的页面。由于Android的浏览器较多，层次不齐，很难适配。下面我介绍的方法，经测试在chrome、uc、魅族自带的浏览器、搜狗浏览器、360浏览器、QQ浏览器、遨游浏览器、火狐浏览器都可适用，甚至可以直接在QQ里面打开，但是在百度浏览器上没有任何反应。"></a>现在的h5与Android原生的交互越来越多，为了提升用户的体验，想分享红包或者一些运营活动，都希望能够直接唤起原生的app,并跳转指定的页面。由于Android的浏览器较多，层次不齐，很难适配。下面我介绍的方法，经测试在chrome、uc、魅族自带的浏览器、搜狗浏览器、360浏览器、QQ浏览器、遨游浏览器、火狐浏览器都可适用，甚至可以直接在QQ里面打开，但是在百度浏览器上没有任何反应。</h3><p><strong>服务端代码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">~&lt;!DOCTYPE html&gt;    </div><div class="line">&lt;html&gt;    </div><div class="line">&lt;body&gt;    </div><div class="line">&lt;a href=&quot;scheme://DIDI/startapp?test=test&quot;&gt;启动应用程序&lt;/a&gt;   </div><div class="line">&lt;/body&gt;    </div><div class="line">&lt;/html&gt;~</div></pre></td></tr></table></figure></p>
<p><strong>Android只需在AndroidManifest.xml文件里面为启动页面添加</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;intent-filter&gt;</div><div class="line">                &lt;action android:name=&quot;android.intent.action.VIEW&quot; /&gt;</div><div class="line">                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;</div><div class="line">                &lt;category android:name=&quot;android.intent.category.BROWSABLE&quot; /&gt;</div><div class="line">                &lt;data</div><div class="line">                    android:host=&quot;DIDI&quot;</div><div class="line">                    android:scheme=&quot;scheme&quot; /&gt;</div><div class="line">&lt;/intent-filter&gt;</div></pre></td></tr></table></figure>
<p><strong>当应用启动时</strong></p>
<p><pre><code><br>getIntent().getDataString();<br></code></pre></p>
<h3 id="得到的的只就是scheme-DIDI-startapp-test-test，就可以通过得到的值，跳转到App的不同页面。"><a href="#得到的的只就是scheme-DIDI-startapp-test-test，就可以通过得到的值，跳转到App的不同页面。" class="headerlink" title="得到的的只就是scheme://DIDI/startapp?test=test，就可以通过得到的值，跳转到App的不同页面。"></a>得到的的只就是scheme://DIDI/startapp?test=test，就可以通过得到的值，跳转到App的不同页面。</h3><h2 id="唤起格式如下："><a href="#唤起格式如下：" class="headerlink" title="唤起格式如下："></a>唤起格式如下：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~&lt;a href=&quot;[scheme]://[host]/[path]?[query]&quot;&gt;启动应用程序&lt;/a&gt; ~</div></pre></td></tr></table></figure>
<h2 id="scheme：调起app的标志"><a href="#scheme：调起app的标志" class="headerlink" title="scheme：调起app的标志"></a>scheme：调起app的标志</h2><h2 id="host-与AndroidManifest里面的host保持一致"><a href="#host-与AndroidManifest里面的host保持一致" class="headerlink" title="host:与AndroidManifest里面的host保持一致"></a>host:与AndroidManifest里面的host保持一致</h2>]]></content>
      
        <categories>
            
            <category> 总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 调起app </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Cocos2D Start]]></title>
      <url>/Blog/2016/10/31/CocosStart/</url>
      <content type="html"><![CDATA[<p>###创建一个新的cocos项目：</p>
<p> <code>cocos new 应用名 -p 包名 -l 语言 -d 生成路径</code></p>
]]></content>
      
        <categories>
            
            <category> Cocos2d </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Cocos2d </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java注解学习笔记]]></title>
      <url>/Blog/2016/10/16/annotate/</url>
      <content type="html"><![CDATA[<h1 id="Java基本注解"><a href="#Java基本注解" class="headerlink" title="Java基本注解"></a>Java基本注解</h1><h3 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h3><blockquote>
<p>@Override 继承父类 </p>
<p>@Deprecated 方法已经过时 </p>
<p>@SupperessWarnings(“depresscated) 忽略警告    </p>
</blockquote>
<h3 id="注解分类"><a href="#注解分类" class="headerlink" title="注解分类"></a>注解分类</h3><ul>
<li>1、源码注解 只存在于源码中，编译成.class文件就不存在了。</li>
<li>2、编译时注解 在源码和.class 文件中存在的注解。</li>
<li>3、运行时注解 在运行阶段还起作用，甚至会影响运行逻辑。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">@Target(&#123;ElementType.METHOD,ElementType.TYPE&#125;)</div><div class="line">@Retantion(RetentionPolicy&gt;RUNTIME)</div><div class="line">@Inherited</div><div class="line">@Documented</div><div class="line">  public @interface Description&#123;</div><div class="line">    String desc();</div><div class="line">    String author();</div><div class="line">    int age() default 18;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>1、成员类型是受限的，合法的类型包括原始类型及StringClass ,Annotation ,Enumeration。</li>
<li>2、如果只有一个成员的时候，成员名必须取名为value(),在使用时可以忽略成员名和赋值号（=）。</li>
<li>3注解类可以没有成员，没有成员的注解叫做标示注解。</li>
</ul>
<h3 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h3><p>@Target 注解作用域</p>
<pre><code>constructor     构造方法声明
file        文件声明
local variable      局部变量声明
method      方法申明
package     包申明

parameter   参数申明
type        类接口
</code></pre><p>@Retention 生命周期</p>
<pre><code>source  只在源码中显示，编译时丢弃
class       编译时会记录到class中，运行时忽略
runtime 运行时存在，可通过反射获取
</code></pre><p>@Inherited 允许子类继承<br>@Docunmented 生成javadoc时包含注解的信息</p>
<h3 id="自定义注解的使用"><a href="#自定义注解的使用" class="headerlink" title="自定义注解的使用"></a>自定义注解的使用</h3><blockquote>
<p>@&lt;注解名&gt;（&lt;成员名1&gt;=&lt;成员值1&gt;，&lt;成员名2&gt;=&lt;成员值2&gt;，……）</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Description</span>(desc=“I am eyeColor”， author=“Mooc boy” ，age=<span class="number">18</span>) 		</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">eyeColor</span><span class="params">()</span></span>&#123; </div><div class="line">	<span class="keyword">return</span> “red”; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">@Table(&quot;pzh&quot;)</div><div class="line">public class User &#123;</div><div class="line">    @Column(&quot;name1&quot;)</div><div class="line">    private String name;</div><div class="line">    @Column(&quot;nickName1&quot;)</div><div class="line">    private String nickName;</div><div class="line">    @Column(&quot;age1&quot;)</div><div class="line">    private int age;</div><div class="line">    public String getName() &#123;</div><div class="line">        return name;</div><div class="line">    &#125;</div><div class="line">    public void setName(String name) &#123;</div><div class="line">        this.name = name;</div><div class="line">    &#125;</div><div class="line">    public String getNickName() &#123;</div><div class="line">        return nickName;</div><div class="line">    &#125;</div><div class="line">    public void setNickName(String nickName) &#123;</div><div class="line">        this.nickName = nickName;</div><div class="line">    &#125;</div><div class="line">    public int getAge() &#123;</div><div class="line">        return age;</div><div class="line">    &#125;</div><div class="line">    public void setAge(int age) &#123;</div><div class="line">        this.age = age;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line">public class Test &#123;</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        // TODO Auto-generated method stub</div><div class="line">        User user = new User();</div><div class="line">        user.setName(&quot;zjp&quot;);</div><div class="line">        show(user);</div><div class="line">    &#125;</div><div class="line">    private static void show(User user) &#123;</div><div class="line">        Class class1 = user.getClass();</div><div class="line">        boolean isExit = class1.isAnnotationPresent(Table.class);</div><div class="line">        if (isExit) &#123;</div><div class="line">            Table table = (Table) class1.getAnnotation(Table.class);</div><div class="line">            System.out.println(&quot;table value=&quot; + table.value());</div><div class="line">        &#125;</div><div class="line">        Field[] files = class1.getDeclaredFields();</div><div class="line">        for (Field field : files) &#123;</div><div class="line">            if (field.isAnnotationPresent(Column.class)) &#123;</div><div class="line">                Column column = field.getAnnotation(Column.class);</div><div class="line">                System.out.println(&quot;column value=&quot; + column.value());</div><div class="line">                System.out.println(&quot;file name=&quot; + field.getName());</div><div class="line">                String filedName=field.getName();</div><div class="line">                String methodNme=&quot;get&quot;+filedName.substring(0, 1).toUpperCase()+filedName.substring(1);</div><div class="line">                try &#123;</div><div class="line">                    Method method=class1.getMethod(methodNme);</div><div class="line">                    Object fileValue=method.invoke(user,null);</div><div class="line">                    System.out.println(&quot;file value=&quot; + fileValue);</div><div class="line">                &#125;  catch (Exception e) &#123;</div><div class="line">                    // TODO Auto-generated catch block</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 实用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> 注解 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何获取Android控件高度]]></title>
      <url>/Blog/2016/10/16/measureview/</url>
      <content type="html"><![CDATA[<p><strong>如何获取一个控件的长和高，相信很多朋友第一眼看见这个问题都会觉得很简单，直接在onCreate里面调用getWidth、getMeasuredWidth不就可以获得了吗，但是，事实上是并没有简单的，不信的话，你可以去试一下，在onCreate里面，你是无法获得长宽值的，始终为0。<br>这是为什么呢，其实熟悉view绘制流程的朋友应该一眼就看出来了，在onCreate中，我们的控件其实还并没有画好，换句话说，等onCreate方法执行完了，我们定义的控件才会被度量(measure)，所以我们在onCreate方法里面通过view.getHeight()获取控件的高度或者宽度肯定是0。</strong></p>
<p>####有三种解决方式</p>
<ol>
<li>1    <pre><code>
int w=View.MeasureSpec.makeMeasureSpec(0,View.MeasureSpec.UNSPECIFIED);
 int h = View.MeasureSpec.makeMeasureSpec(0,View.MeasureSpec.UNSPECIFIED);
imageView.measure(w,h);
int height = imageView.getMeasuredHeight();
int width = imageView.getMeasuredWidth();`
</code></pre></li>
<li><p>2<pre><code>ViewTreeObserver<br>vto = imageView.getViewTreeObserver();<br>vto.addOnPreDrawListener(new<br>ViewTreeObserver.OnPreDrawListener() {<br>public boolean onPreDraw() {<br>vto.removeOnPreDrawListener(this);<br>int height = imageView.getMeasuredHeight();<br>int width = imageView.getMeasuredWidth();<br>return true;<br>}<br>})<br></code></pre></p>
</li>
<li><p>3<pre><code><br>ViewTreeObserver<br>vto = imageView.getViewTreeObserver();<br>vto.addOnGlobalLayoutListener(new OnGlobalLayoutListener() {<br>@Override<br>public void onGlobalLayout()<br>{<br>imageView.getViewTreeObserver().removeGlobalOnLayoutListener(this);<br>imageView.getHeight();<br>imageView.getWidth();<br>}<br>});<br></code></pre>这个方法，我们需要注册一个ViewTreeObserver的监听回调，这个监听回调，就是专门监听绘图的，既然是监听绘图，那么我们自然可以获取测量值了，同时，我们在每次监听前remove前一次的监听，避免重复监听。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 技巧 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[支付分享]]></title>
      <url>/Blog/2016/10/16/share/</url>
      <content type="html"><![CDATA[<p>  最近由于公司想弄一个新手推荐活动，因为是推荐活动，必须借用现在流行的社交软件进行各种分享，只要形式有微信分享到好友或者朋友圈、QQ分享给好友或者空间、微博分享和短信分享等。下面我就跟大家一起聊下在分享的过程中所遇到的各种坑。本文来自于自己的经验，不足的地方还请指正。首先说下我是怎么实现的，然后给大家说下实现过程中应该注意的。</p>
<h2 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h2><ol>
<li><p>微信支付注册    </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">api = WXAPIFactory.createWXAPI(this, AppConfig.WEIXIN_PAY_ID, false);</div></pre></td></tr></table></figure>
<blockquote>
<p>第二个参数是我们在微信开放平台申请的Pay_ID<br>第三个参数代表是否进行校验.    </p>
</blockquote>
</li>
<li><p>微信推荐我们从后台生成订单，然后再通过app调起微信进行支付，其实也可以App里面就生成订单，然后Appc里面进行支付。两种都是可行的，但是大多数App并不是简简单单的支付，可能还要数据库入库，或者进行一些其他的操作，通过后台生成订单就比较好，大家可以根据自己的需求，选择适合自己的。</p>
</li>
<li><p>当订单生成之后，我们需要拼接调起微信支付的请求PayReq：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">PayReq request = <span class="keyword">new</span> PayReq();</div><div class="line">	request.appId = object.getString(<span class="string">"appId"</span>);</div><div class="line">	request.partnerId = object.getString(<span class="string">"partnerId"</span>);</div><div class="line">	request.prepayId = object.getString(<span class="string">"prepayId"</span>);</div><div class="line">	request.packageValue = object.getString(<span class="string">"package"</span>);</div><div class="line">	request.nonceStr = object.getString(<span class="string">"nonceStr"</span>);</div><div class="line">	request.timeStamp = object.getString(<span class="string">"timeStamp"</span>);</div><div class="line">	request.sign = object.getString(<span class="string">"sign"</span>);</div><div class="line">	api.sendReq(request);</div></pre></td></tr></table></figure>
<p><strong>通过api.sendReq(),我们就能调起微信进行支付啦。一般情况下还是比较容易调起 的，如果没反应，请检查自己的APP_ID，然后在检查一下自己的PayReq，然后在检查一下，是否添加了必须的权限。</strong></p>
</li>
<li><p>微信成功调起，输入密码成功支付之后，如果我们想要知道微信支付的结果，就必须在应用包名下，新建一个wxapi的包，然后新建一个WXPayEntryActivity，重点注意包名和activity的名字不要写错，微信是通过包名加activity的名称通过反射跳转到该页面。这样还不够，需要实现微信定义的IWXAPIEventHandler，重写onResp和onReq，在onReq里面我们可以对app发送到微信的请求做些处理，在onResp我们可以接收到微信返回的结果。返回结果bean里面的errCode比较简单，0代表成功，-1代表失败，-2代表取消。这样还不够，还要调用iwxapi.handleIntent(getIntent(), this)在能正真的接收到微信返回的消息。如果没能成功的接收到微信返回的消息，依次检查包名activity名是否与规定的不符，检查是否在AndroidMianfest里面注册了activity，然后是否调用了iwxapi.handleIntent(getIntent(), this)。</p>
</li>
</ol>
<h3 id="以上就是微信支付的总结，主要注意"><a href="#以上就是微信支付的总结，主要注意" class="headerlink" title="以上就是微信支付的总结，主要注意"></a>以上就是微信支付的总结，主要注意</h3><ol>
<li>权限是否添加</li>
<li><strong>wxapi和WXPayEntryActivity的包名是否正确</strong></li>
<li><strong>在 WXPayEntryActivity里面是否调用了iwxapi.handleIntent(getIntent(), this)</strong></li>
</ol>
<h2 id="微信分享"><a href="#微信分享" class="headerlink" title="微信分享"></a>微信分享</h2><ol>
<li><p>首先检测手机是否安装了微信，通过微信自定义的方法</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">IWXAPI api = WXAPIFactory.createWXAPI(context, AppConfig.WEIXIN_PAY_ID, <span class="keyword">false</span>);</div><div class="line">  <span class="keyword">if</span> (api.isWXAppInstalled() &amp;&amp; api.isWXAppSupportAPI()) &#123;</div><div class="line">         flag = <span class="keyword">true</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>api.isWXAppInstalled（）返回微信是否安装<br>api.isWXAppSupportAPI（）返回微信是否支持支付</p>
</blockquote>
</li>
<li><p>在初始化了api之后，我们需要把应用注册到微信<code>api.registerApp(AppConfig.WEIXIN_PAY_ID);</code></p>
</li>
<li>下面就是创建WXobject和wxMessage，说明文档上有具体的代码，分享文字，图片，音频等详细代码，我就不一一重述了，大家自己去微信开放平台查看代码。通过api.sendReq(req)我们就能调起微信分享的界面。</li>
<li>跟微信支付一样，我们 需要在wxapi包下面新建一个WXEntryActivity，并且实现IWXAPIEventHandler才能接收到是否分享成功。</li>
</ol>
<h3 id="如果没有分享成功，依次检查："><a href="#如果没有分享成功，依次检查：" class="headerlink" title="如果没有分享成功，依次检查："></a>如果没有分享成功，依次检查：</h3><ol>
<li><p><strong>分享之前时候注册了应用到微信</strong></p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">api.registerApp(AppConfig.WEIXIN_PAY_ID);</div></pre></td></tr></table></figure>
</li>
<li><p><strong>WXEntryActivity是否注册了</strong></p>
</li>
<li><strong>是否添加了必要的权限</strong></li>
</ol>
<h2 id="QQ分享"><a href="#QQ分享" class="headerlink" title="QQ分享"></a>QQ分享</h2><ol>
<li>首先导入必须的mta_sdk.jar和open_sdk.jar</li>
<li>AndroidManifest里面添加</li>
<li><p>Tencent是QQ的入口，需要实例化Tencent：<br><code>Tencent：mTencent = Tencent.createInstance(APP_ID, this.getApplicationContext());</code></p>
</li>
<li><p>实现回调：IUiListener，QQ的所有操作都是通过这个回调的，如果要想接收到QQ的回调，还需要重写onActivityRes</p>
</li>
</ol>
<h3 id="如果没有分享成功，依次检查：-1"><a href="#如果没有分享成功，依次检查：-1" class="headerlink" title="如果没有分享成功，依次检查："></a>如果没有分享成功，依次检查：</h3><ol>
<li><strong>是否添加必要的权限</strong></li>
<li><strong>是否在Manifest里面注册了必要的activity，重点注意的是 <data android:scheme="tencent" +appkey="">，这里以Tencent 开头，后面的数字是自己申请的appkey，当初就是这里没有处理，导致QQ一直无法调起</data></strong></li>
<li><strong>如果分享成功，但是不能接收到回调，检查是否重写了onActivityResult()</strong></li>
</ol>
<h2 id="微博分享"><a href="#微博分享" class="headerlink" title="微博分享"></a>微博分享</h2><h5 id="微博里面文档比较全，他涉及到的东西也非常多，我们移动app比较关注的是他的分享和登陆。"><a href="#微博里面文档比较全，他涉及到的东西也非常多，我们移动app比较关注的是他的分享和登陆。" class="headerlink" title="微博里面文档比较全，他涉及到的东西也非常多，我们移动app比较关注的是他的分享和登陆。"></a>微博里面文档比较全，他涉及到的东西也非常多，我们移动app比较关注的是他的分享和登陆。</h5><ol>
<li>导入jar包和so库</li>
<li><p>在Manifest里面添加:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">"com.sina.weibo.sdk.component.WeiboSdkBrowser"</span>           <span class="attr">android:configChanges</span>=<span class="string">"keyboardHidden|orientation"</span></span></div><div class="line">        <span class="attr">android:exported</span>=<span class="string">"false"</span></div><div class="line">        <span class="attr">android:windowSoftInputMode</span>=<span class="string">"adjustResize"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<pre><code>&gt;这是微博自带的有个webview，当你手机没有安装微博的时候，可以通过H5实现分享和登陆。如果没有注册的话，当没安装微博客户端的时候，无法调起微博H5页面；
</code></pre><ol>
<li>实现IWeiboHandler.Response接口，用于接收微博分享的结果</li>
<li><p>实例化IWeiboShareAPI、注册，处理微博分享 的结果：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mWeiboShareAPI=WeiboShareSDK.createWeiboAPI(context.getApplicationContext(), AppConfig.WEIBO_APPID);</div><div class="line">       mWeiboShareAPI.registerApp();</div><div class="line">mWeiboShareAPI.handleWeiboResponse(getIntent(), <span class="keyword">this</span>);<span class="comment">//处理微博分享的结果；</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>###如果没有分享成功，一次检查：</p>
<ol>
<li>因为微博审核比较严格，只有当审核通过之后才能分享成功，有可能并不是你的代码问题，而是审核没有通过，导致分享失败</li>
<li>在没有安装微博的情况下，不能跳到微博分享的H5,检查Manifest里面是否注册了微博的H5 webview;</li>
<li><p>添加必须的权限**<br>下面分享我自己写的一个ShareUtils，里面实现了QQ，微信，微博分享，大家可以自行下载对照。</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div></pre></td><td class="code"><pre><div class="line">	<span class="keyword">import</span> android.app.Activity;</div><div class="line">	<span class="keyword">import</span> android.content.Context;</div><div class="line">	<span class="keyword">import</span> android.content.Intent;</div><div class="line">	<span class="keyword">import</span> android.content.SharedPreferences;</div><div class="line">	<span class="keyword">import</span> android.graphics.Bitmap;</div><div class="line">	<span class="keyword">import</span> android.graphics.BitmapFactory;</div><div class="line">	<span class="keyword">import</span> android.net.Uri;</div><div class="line">	<span class="keyword">import</span> android.os.Bundle;</div><div class="line">	<span class="keyword">import</span> android.widget.Toast;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.TextObject;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.WebpageObject;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.WeiboMessage;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.WeiboMultiMessage;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.share.IWeiboShareAPI;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.api.share.WeiboShareSDK;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.auth.AuthInfo;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.auth.Oauth2AccessToken;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.auth.WeiboAuthListener;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.exception.WeiboException;</div><div class="line"><span class="keyword">import</span> com.sina.weibo.sdk.utils.Utility;</div><div class="line"><span class="keyword">import</span> com.tencent.connect.common.Constants;</div><div class="line"><span class="keyword">import</span> com.tencent.connect.share.QQShare;</div><div class="line"><span class="keyword">import</span> com.tencent.connect.share.QzoneShare;</div><div class="line"><span class="keyword">import</span> com.tencent.mm.sdk.modelmsg.SendMessageToWX;</div><div class="line"><span class="keyword">import</span> com.tencent.mm.sdk.modelmsg.WXMediaMessage;</div><div class="line"><span class="keyword">import</span> com.tencent.mm.sdk.modelmsg.WXWebpageObject;</div><div class="line"><span class="keyword">import</span> com.tencent.mm.sdk.openapi.IWXAPI;</div><div class="line"><span class="keyword">import</span> com.tencent.mm.sdk.openapi.WXAPIFactory;</div><div class="line"><span class="keyword">import</span> com.tencent.tauth.IUiListener;</div><div class="line"><span class="keyword">import</span> com.tencent.tauth.Tencent;</div><div class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShareUtils</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PREFERENCES_NAME = <span class="string">"com_weibo_sdk_android"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_UID = <span class="string">"uid"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_ACCESS_TOKEN = <span class="string">"access_token"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_EXPIRES_IN = <span class="string">"expires_in"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_REFRESH_TOKEN = <span class="string">"refresh_token"</span>;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isWeiXinInstallAndSupport</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line">        IWXAPI api = WXAPIFactory.createWXAPI(context, AppConfig.WEIXIN_PAY_ID, <span class="keyword">false</span>);</div><div class="line">        <span class="keyword">if</span> (api.isWXAppInstalled() &amp;&amp; api.isWXAppSupportAPI()) &#123;</div><div class="line">            flag = <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> flag;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> context</div><div class="line">     * <span class="doctag">@param</span> type    1:分享到朋友圈            2：分享到微信好友</div><div class="line">     * <span class="doctag">@param</span> title   标题</div><div class="line">     * <span class="doctag">@param</span> url     跳转url</div><div class="line">     * <span class="doctag">@param</span> imageId 图片id</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shareToWeChat</span><span class="params">(Context context, <span class="keyword">int</span> type, String title, String url, <span class="keyword">int</span> imageId)</span> </span>&#123;</div><div class="line">        IWXAPI api = WXAPIFactory.createWXAPI(context, AppConfig.WEIXIN_PAY_ID);</div><div class="line">        api.registerApp(AppConfig.WEIXIN_PAY_ID);</div><div class="line"></div><div class="line">        Bitmap bitmap = BitmapFactory.decodeResource(context.getResources(), imageId);</div><div class="line">        Bitmap thumbBmp = Bitmap.createScaledBitmap(bitmap, <span class="number">150</span>, <span class="number">150</span>, <span class="keyword">true</span>);</div><div class="line">        bitmap.recycle();</div><div class="line"></div><div class="line">        WXWebpageObject webpageObject = <span class="keyword">new</span> WXWebpageObject();</div><div class="line">        webpageObject.webpageUrl = url;</div><div class="line"></div><div class="line">        WXMediaMessage msg = <span class="keyword">new</span> WXMediaMessage();</div><div class="line">        msg.mediaObject = webpageObject;</div><div class="line">        msg.title = title;</div><div class="line">        msg.thumbData = bmpToByteArray(thumbBmp, <span class="keyword">true</span>);</div><div class="line">        SendMessageToWX.Req req = <span class="keyword">new</span> SendMessageToWX.Req();</div><div class="line">        req.message = msg;</div><div class="line">        req.transaction = System.currentTimeMillis() + <span class="string">""</span>;</div><div class="line">        req.scene = type == <span class="number">1</span> ? SendMessageToWX.Req.WXSceneTimeline : SendMessageToWX.Req.WXSceneSession;</div><div class="line">        api.sendReq(req);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> context</div><div class="line">     * <span class="doctag">@param</span> title       标题</div><div class="line">     * <span class="doctag">@param</span> description 描述</div><div class="line">     * <span class="doctag">@param</span> url         跳转URL</div><div class="line">     * <span class="doctag">@param</span> imageUrl    图片链接</div><div class="line">     * <span class="doctag">@param</span> callBack</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shareToQQ</span><span class="params">(Tencent mTencent, Context context, String title, String description, String url, String imageUrl, IUiListener callBack)</span> </span>&#123;</div><div class="line">        Bundle params = <span class="keyword">new</span> Bundle();</div><div class="line">        params.putInt(QQShare.SHARE_TO_QQ_KEY_TYPE, QQShare.SHARE_TO_QQ_TYPE_DEFAULT);</div><div class="line">        params.putString(QQShare.SHARE_TO_QQ_TITLE, title);</div><div class="line">        params.putString(QQShare.SHARE_TO_QQ_SUMMARY, description);</div><div class="line">        params.putString(QQShare.SHARE_TO_QQ_TARGET_URL, url);</div><div class="line">        params.putString(QQShare.SHARE_TO_QQ_IMAGE_URL, imageUrl);</div><div class="line">        params.putString(QQShare.SHARE_TO_QQ_APP_NAME, App名字);</div><div class="line">        mTencent.shareToQQ((Activity) context, params, callBack);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> context</div><div class="line">     * <span class="doctag">@param</span> picLists    图片arraylist,可以分享多张图片</div><div class="line">     * <span class="doctag">@param</span> title       标题</div><div class="line">     * <span class="doctag">@param</span> description 描述</div><div class="line">     * <span class="doctag">@param</span> url         跳转url</div><div class="line">     * <span class="doctag">@param</span> callBack</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shareToZone</span><span class="params">(Context context, ArrayList&lt;String&gt; picLists, String title, String description, String url, IUiListener callBack)</span> </span>&#123;</div><div class="line">        Tencent mTencent = Tencent.createInstance(AppConfig.QQ_APPID, context.getApplicationContext());</div><div class="line">        <span class="keyword">final</span> Bundle params = <span class="keyword">new</span> Bundle();</div><div class="line">        params.putInt(QzoneShare.SHARE_TO_QZONE_KEY_TYPE, QzoneShare.SHARE_TO_QZONE_TYPE_IMAGE_TEXT);</div><div class="line">        params.putString(QzoneShare.SHARE_TO_QQ_TITLE, title);<span class="comment">//必填</span></div><div class="line">        params.putString(QzoneShare.SHARE_TO_QQ_SUMMARY, description);<span class="comment">//选填</span></div><div class="line">        params.putString(QzoneShare.SHARE_TO_QQ_TARGET_URL, url);<span class="comment">//必填</span></div><div class="line">        params.putStringArrayList(QzoneShare.SHARE_TO_QQ_IMAGE_URL, picLists);</div><div class="line">        mTencent.shareToQzone((Activity) context, params, callBack);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> context</div><div class="line">     * <span class="doctag">@param</span> phoneNum 短信接受者电话号码</div><div class="line">     * <span class="doctag">@param</span> content  短信内容</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shareToSms</span><span class="params">(Context context, String phoneNum, String content)</span> </span>&#123;</div><div class="line">        Uri smsToUri = Uri.parse(<span class="string">"smsto:"</span> + phoneNum);</div><div class="line"></div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_SENDTO, smsToUri);</div><div class="line"></div><div class="line">        intent.putExtra(<span class="string">"sms_body"</span>, content);</div><div class="line"></div><div class="line">        context.startActivity(intent);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> context</div><div class="line">     * <span class="doctag">@param</span> resId       显示图片</div><div class="line">     * <span class="doctag">@param</span> title       标题</div><div class="line">     * <span class="doctag">@param</span> description 描述</div><div class="line">     * <span class="doctag">@param</span> url         跳转url</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shareToWeibo</span><span class="params">(IWeiboShareAPI api, <span class="keyword">final</span> Context context, <span class="keyword">int</span> resId, String title, String description, String url)</span> </span>&#123;</div><div class="line">        WebpageObject mediaObject = <span class="keyword">new</span> WebpageObject();</div><div class="line">        mediaObject.identify = Utility.generateGUID();</div><div class="line">        mediaObject.title = title;</div><div class="line">        mediaObject.description = title;</div><div class="line"></div><div class="line">        TextObject textObject = <span class="keyword">new</span> TextObject();</div><div class="line">        textObject.text = title;</div><div class="line"></div><div class="line">        Bitmap bitmap = BitmapFactory.decodeResource(context.getResources(), resId);</div><div class="line">        <span class="comment">// 设置 Bitmap 类型的图片到视频对象里         设置缩略图。 注意：最终压缩过的缩略图大小不得超过 32kb。</span></div><div class="line">        mediaObject.setThumbImage(bitmap);</div><div class="line">        mediaObject.actionUrl = url;</div><div class="line">        mediaObject.defaultText = title;</div><div class="line"></div><div class="line">        WeiboMultiMessage weiboMessage = <span class="keyword">new</span> WeiboMultiMessage();</div><div class="line">        weiboMessage.mediaObject = mediaObject;</div><div class="line">        weiboMessage.textObject=textObject;</div><div class="line">        SendMultiMessageToWeiboRequest request = <span class="keyword">new</span> SendMultiMessageToWeiboRequest();</div><div class="line">        <span class="comment">// 用transaction唯一标识一个请求</span></div><div class="line">        request.transaction = String.valueOf(System.currentTimeMillis());</div><div class="line">        request.multiMessage = weiboMessage;</div><div class="line">        <span class="comment">// 3. 发送请求消息到微博，唤起微博分享界面</span></div><div class="line"></div><div class="line"></div><div class="line">        AuthInfo authInfo = <span class="keyword">new</span> AuthInfo(context, AppConfig.WEIBO_APPID, <span class="string">""</span>, AppConfig.SCOPE);</div><div class="line">        Oauth2AccessToken accessToken = readAccessToken(context.getApplicationContext());</div><div class="line">        String token = <span class="string">""</span>;</div><div class="line">        <span class="keyword">if</span> (accessToken != <span class="keyword">null</span>) &#123;</div><div class="line">            token = accessToken.getToken();</div><div class="line">        &#125;</div><div class="line">        api.sendRequest((Activity) context, request, authInfo, token, <span class="keyword">new</span> WeiboAuthListener() &#123;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onWeiboException</span><span class="params">(WeiboException arg0)</span> </span>&#123;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">(Bundle bundle)</span> </span>&#123;</div><div class="line">                <span class="comment">// TODO Auto-generated method stub</span></div><div class="line">                Oauth2AccessToken newToken = Oauth2AccessToken.parseAccessToken(bundle);</div><div class="line">                writeAccessToken(context.getApplicationContext(), newToken);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCancel</span><span class="params">()</span> </span>&#123;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeAccessToken</span><span class="params">(Context context, Oauth2AccessToken token)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == context || <span class="keyword">null</span> == token) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        SharedPreferences pref = context.getSharedPreferences(PREFERENCES_NAME, Context.MODE_APPEND);</div><div class="line">        SharedPreferences.Editor editor = pref.edit();</div><div class="line">        editor.putString(KEY_UID, token.getUid());</div><div class="line">        editor.putString(KEY_ACCESS_TOKEN, token.getToken());</div><div class="line">        editor.putString(KEY_REFRESH_TOKEN, token.getRefreshToken());</div><div class="line">        editor.putLong(KEY_EXPIRES_IN, token.getExpiresTime());</div><div class="line">        editor.commit();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Oauth2AccessToken <span class="title">readAccessToken</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == context) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Oauth2AccessToken token = <span class="keyword">new</span> Oauth2AccessToken();</div><div class="line">        SharedPreferences pref = context.getSharedPreferences(PREFERENCES_NAME, Context.MODE_APPEND);</div><div class="line">        token.setUid(pref.getString(KEY_UID, <span class="string">""</span>));</div><div class="line">        token.setToken(pref.getString(KEY_ACCESS_TOKEN, <span class="string">""</span>));</div><div class="line">        token.setRefreshToken(pref.getString(KEY_REFRESH_TOKEN, <span class="string">""</span>));</div><div class="line">        token.setExpiresTime(pref.getLong(KEY_EXPIRES_IN, <span class="number">0</span>));</div><div class="line"></div><div class="line">        <span class="keyword">return</span> token;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] bmpToByteArray(<span class="keyword">final</span> Bitmap bmp, <span class="keyword">final</span> <span class="keyword">boolean</span> needRecycle) &#123;</div><div class="line">        ByteArrayOutputStream output = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">        bmp.compress(Bitmap.CompressFormat.PNG, <span class="number">100</span>, output);</div><div class="line">        <span class="keyword">if</span> (needRecycle) &#123;</div><div class="line">            bmp.recycle();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">byte</span>[] result = output.toByteArray();</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            output.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>文章写得不好，欢迎大家吐槽</strong></p>
]]></content>
      
        <categories>
            
            <category> 实用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 支付 </tag>
            
            <tag> 分享 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android studio关联Gradle源码]]></title>
      <url>/Blog/2016/10/16/Android%20studio%E5%85%B3%E8%81%94%E6%BA%90%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>###&emsp;&emsp;Android studio都出来这么久了，相信现在的Android开发者大部分都已经在使用了。可能你曾经对Android有多年的开发经验，但是对于gradle这个工具，可能不是很了解，或者之前从来都没接触过。Android studio 对 Gradle也没有自动提示，对于自己从0开始写一个gradle配置文件，还是很难的。或者查看大神代码的时候，对于Gradle的各种配置搞得云里雾里。这个时候就会想，要是能直接在Android studio里面关联源码多好啊。这篇教程就是教你在Android studio里面关联gradle源码。</p>
<p><img src="http://ww1.sinaimg.cn/large/d948997dgy1fe66977rucj20ec051gln.jpg" alt="android studio查看源码"><br><img src="http://ww1.sinaimg.cn/large/d948997dly1fe66ap7x7wj20g104s748.jpg" alt="源码"></p>
<p>###&nbsp;&nbsp;&nbsp;&nbsp;打开我们的Gradle文件，发现某个写法我们不是很了解，自然的想到了Android studio的看源码大法。点进去才发现，这是什么啊，没有任何注释，方法和参数都还混淆了，怎么玩？这就是因为我们还没能关联源码，我们打开的是class文件，而不是源码。</p>
<p>###既然是关联源码，我们首先肯定是要下载源码。</p>
<ol>
<li><font color="#ff0000" size="3" face="黑体">查看我们打开的class文件的目录（我的是/Applications/Android Studio.app/Contents/gradle/m2repository/com/android/tools/build/builder/2.3.0)</font>        </li>
<li><font color="#ff0000" size="3" face="黑体">打开moven网站下载源码，可以在<a href="http://search.maven.org/#search%7Cga%7C1%7C" target="_blank" rel="external">maven网站</a>下载</font>    </li>
<li><font color="#ff0000" size="3" face="黑体">搜索com.android.tools.bulid,找到Builder，并且下载源码</font>     </li>
<li><font color="#ff0000" size="3" face="黑体">copy下载下来的源码，到第一步对应的路径下，重启或者rebulid 一下，就可以使用Android studio的查看源码大发查看了，有详细的注释，还有科学的命名，配置gradle越来越简单了。</font>

<p><img src="http://ww1.sinaimg.cn/large/d948997dgy1fe66fdgjpjj20xe07wmyb.jpg" alt="关联了源码之后"></p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 关联 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[webview调起微信支付宝]]></title>
      <url>/Blog/2016/10/16/pay/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> 支付 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> 支付 </tag>
            
            <tag> 支付宝 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
